{"version":3,"sources":["Components/VisualizationBase/VisualizationBase.jsx","Contexts/DataContext/data-context.js","Contexts/DataContext/withData.jsx","Contexts/InteractionContext/interaction-context.js","Contexts/InteractionContext/withInteraction.jsx","Visualizations/CountryPicker/CountryPicker.jsx","Visualizations/LineChart/LineChart.jsx","Visualizations/ScatterPlot/ScatterPlot.jsx","Modules/MacroNameMap.js","Visualizations/Waterfall/WaterfallViz/Waterfall.jsx","Components/Selector/Selector.jsx","Visualizations/Waterfall/WaterfallConfig/WaterfallConfig.jsx","Visualizations/Waterfall/WaterfallContainer/WaterfallContainer.jsx","Visualizations/YearSlider/YearSlider.jsx","Components/VisualizationContainer/VisualizationContainer.jsx","Contexts/DataContext/DataProvider.jsx","Contexts/InteractionContext/InteractionProvider.jsx","App/App.jsx","serviceWorker.js","index.js"],"names":["VisualizationBase","_this$props","this","props","style","children","rest","Object","objectWithoutProperties","react_default","a","createElement","className","card","assign","Component","DataContext","React","withData","react","Consumer","dataProps","data","InteractionContext","withInteraction","interactionProps","interaction","Text","Option","es_select","handleChange","value","_this","setQuery","countries","setFields","availableCountries","_this2","GET_COUNTRIES","gql","_templateObject","react_apollo_esm","query","_ref","loading","error","console","log","mode","width","placeholder","defaultValue","onChange","map","country","key","settings","height","padding","numDataPoints","maxRange","Math","random","XAxis","renderXAxis","node","refs","axisContainer","axis","d3","ticks","tickFormat","scale","call","ref","transform","translate","YAxis","renderYAxis","flip","XYAxis","LineChart_XAxis","concat","xScale","textAnchor","LineChart_YAxis","yScale","otherYScale","Lines","coords","x1","y1","x2","y2","strokeWidth","stroke","color","renderLine","bind","DataCircles","cx","cy","r","fill","renderCircle","LineGraph","domain","range","getXScale","yDataScale","getDataYScale","yDeathDataScale","getDeathYScale","LineChart_Lines","deathData","LineChart_DataCircles","LineChart_XYAxis","getData","myData","setState","yr","i","arr","filter","d","LineChart_LineGraph","state","Title","Axis","renderAxis","orient","ScatterPlot_Axis","ScatterPlot","_this3","xMax","getYScale","yMax","ScatterPlot_DataCircles","ScatterPlot_XYAxis","ScatterPlotViz","randomizeData","_this4","randomData","floor","ScatterPlot_ScatterPlot_ScatterPlot","onClick","defaultProps","MacroNameMap","Grand Total - Animal Protein - Food supply","Grand Total - Carbs - Food supply","Grand Total - Fat - Food supply","Grand Total - Food supply","Grand Total - Plant Protein - Food supply","Grand Total - Protein - Food supply","MODE","Waterfall_Axis","DataRectangles","renderRect","coord","dist","xDiff","abs","x","xAbs","xLast","y","year","renderRectText","toFixed","WaterfallPlot","xMin","absMax","yMin","Waterfall_DataRectangles","Waterfall_XYAxis","Waterfall","toggleMode","processData","nextData","datum","index","val","prevProps","group","Waterfall_WaterfallPlot","objectSpread","baseYear","Selector","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","indexOf","options","Selector_Option","display","fields","GET_GROUP_OPTIONS","WaterfallConfig_templateObject","type","defineProperty","Components_Selector_Selector","undefined","names","name","es_button","toggleView","displayConfig","_callee","diff","regenerator_default","wrap","_context","prev","next","filterData","stop","_this$state","c","items","item","_this$state2","config","shape","icon","Waterfall_WaterfallConfig_WaterfallConfig","Waterfall_WaterfallViz_Waterfall","MySlider","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleRelease","selectedYears","toConsumableArray","Array","keys","v","years","availableYears","min","max","_this$props2","YearSlider_Text","slider","onAfterChange","GET_YEAR_RANGE","YearSlider_templateObject","_data$yearRange","yearRange","YearSlider_MySlider","Sider","Content","VisualizationContainer","waterfalls","openVisualization","visualizationComponent","layout","theme","Visualizations_CountryPicker_CountryPicker","Visualizations_YearSlider_YearSlider","Components_VisualizationBase_VisualizationBase","Visualizations_ScatterPlot_ScatterPlot","Visualizations_LineChart_LineChart","Waterfall_WaterfallContainer_WaterfallContainer","DataProvider","asyncToGenerator","mark","nextQuery","queryParams","_x","apply","arguments","setData","_this$state$queryPara","client","DataProvider_templateObject","length","JSON","stringify","then","result","itemByYearCountry","catch","err","setDate","ApolloClient","uri","Provider","InteractionProvider","nextFieldsDiff","selectedYear","selectedCountry","hoveredYear","hoveredCountry","App","DataProvider_DataProvider","InteractionProvider_InteractionProvider","Components_VisualizationContainer_VisualizationContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29eefb8f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'antd';\n\nimport './VisualizationBase.css';\n\nclass VisualizationBase extends Component {\n  static propTypes = {\n    children: PropTypes.element,\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n    return (\n      <div className=\"VisualizationBase-container\">\n        <Card style={style} {...rest}>\n          {this.props.children || 'Pick a visualization to get started'}\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default VisualizationBase;\n","import * as React from 'react';\n\nexport const DataContext = React.createContext();\n","import * as React from 'react';\nimport { DataContext } from './data-context';\n\nexport function withData(Component) {\n  return function DataComponent(props) {\n    return (\n      <DataContext.Consumer>\n        {dataProps => <Component {...props} data={dataProps} />}\n      </DataContext.Consumer>\n    );\n  };\n}\n","import * as React from 'react';\n\nexport const InteractionContext = React.createContext();\n","import * as React from 'react';\nimport { InteractionContext } from './interaction-context';\n\nexport function withInteraction(Component) {\n  return function InteractionComponent(props) {\n    return (\n      <InteractionContext.Consumer>\n        {interactionProps => (\n          <Component {...props} interaction={interactionProps} />\n        )}\n      </InteractionContext.Consumer>\n    );\n  };\n}\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { withData } from '../../Contexts/DataContext/withData';\nimport { withInteraction } from '../../Contexts/InteractionContext/withInteraction';\nimport { Select, Typography } from 'antd';\n\nconst { Text } = Typography;\n\nconst Option = Select.Option;\n\nclass CountryPicker extends Component {\n  handleChange = value => {\n    this.props.data.setQuery({ countries: value || [] });\n    this.props.interaction.setFields({ availableCountries: value || [] });\n  };\n\n  render() {\n    const GET_COUNTRIES = gql`\n      {\n        countries\n      }\n    `;\n\n    return (\n      <Query query={GET_COUNTRIES}>\n        {({ loading, error, data }) => {\n          if (loading) return 'Loading...';\n          if (error) console.log('Error loading gql data for CountryPicker');\n          const { countries } = data;\n\n          return (\n            <div>\n              <Text>Country</Text>\n              <Select\n                mode=\"multiple\"\n                style={{ width: '100%' }}\n                placeholder=\"Please select\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {countries.map(country => (\n                  <Option key={country}>{country}</Option>\n                ))}\n              </Select>\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withInteraction(withData(CountryPicker));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport { withData } from '../../Contexts/DataContext/withData';\n\nimport './LineChart.css';\n\nconst settings = {\n  width: 1000,\n  height: 300,\n  padding: 50,\n  numDataPoints: 50,\n  maxRange: () => Math.random() * 1000,\n};\n\nclass XAxis extends React.Component {\n  static propTypes = {\n    translate: PropTypes.string.isRequired,\n    scale: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.renderXAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderXAxis();\n  }\n\n  renderXAxis() {\n    const node = this.refs.axisContainer;\n    const baseAxis = d3\n      .axisBottom()\n      .ticks(5)\n      .tickFormat(d3.format('d'));\n    const axis = baseAxis.scale(this.props.scale);\n    d3.select(node).call(axis);\n  }\n\n  render() {\n    return (\n      <g\n        className=\"axis\"\n        ref=\"axisContainer\"\n        transform={this.props.translate}\n      />\n    );\n  }\n}\n\nclass YAxis extends React.Component {\n  static propTypes = {\n    translate: PropTypes.string.isRequired,\n    scale: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.renderYAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderYAxis();\n  }\n\n  renderYAxis() {\n    const node = this.refs.axisContainer;\n    let baseAxis;\n    if (this.props.flip) baseAxis = d3.axisRight();\n    else baseAxis = d3.axisLeft();\n    const axis = baseAxis.ticks(5).scale(this.props.scale);\n    d3.select(node).call(axis);\n  }\n\n  render() {\n    return (\n      <g\n        className=\"axis\"\n        ref=\"axisContainer\"\n        transform={this.props.translate}\n      />\n    );\n  }\n}\n\nclass XYAxis extends React.Component {\n  static propTypes = {\n    padding: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <g className=\"LE-xy-axis\">\n        <XAxis\n          translate={`translate(0, ${this.props.height -\n            (this.props.padding * 2) / 3})`}\n          scale={this.props.xScale}\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(${settings.width / 2 -\n            this.props.padding / 2}, ${settings.height - 5})`}\n        >\n          [year]\n        </text>\n        <YAxis\n          translate={`translate(${this.props.padding}, 0)`}\n          scale={this.props.yScale}\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(10, ${settings.height / 2}), rotate(-90)`}\n        >\n          [total kCal]\n        </text>\n        <YAxis\n          translate={`translate(${settings.width - this.props.padding * 2}, 0)`}\n          scale={this.props.otherYScale}\n          flip\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(${settings.width - 10}, ${settings.height /\n            2}), rotate(-90)`}\n        >\n          [Mean Age of Death]\n        </text>\n      </g>\n    );\n  }\n}\n\nclass Lines extends React.Component {\n  static propTypes = {\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  renderLine(coords) {\n    return (\n      <line\n        x1={this.props.xScale(coords[0])}\n        y1={this.props.yScale(coords[1])}\n        x2={this.props.xScale(coords[2])}\n        y2={this.props.yScale(coords[3])}\n        strokeWidth={2}\n        stroke={this.props.color}\n      />\n    );\n  }\n\n  render() {\n    return <g>{this.props.data.map(this.renderLine.bind(this))}</g>;\n  }\n}\n\nclass DataCircles extends React.Component {\n  static propTypes = {\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  renderCircle(coords) {\n    return (\n      <circle\n        cx={this.props.xScale(coords[2])}\n        cy={this.props.yScale(coords[3])}\n        r={3}\n        key={Math.random()}\n        fill={this.props.color}\n      />\n    );\n  }\n\n  render() {\n    return <g>{this.props.data.map(this.renderCircle.bind(this))}</g>;\n  }\n}\n\nclass LineGraph extends React.Component {\n  static propTypes = {\n    padding: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    data: PropTypes.array.isRequired,\n  };\n\n  getXScale() {\n    return d3\n      .scaleLinear()\n      .domain([1983, 2013]) // When data begins, ends\n      .range([this.props.padding, this.props.width - this.props.padding * 2]);\n  }\n\n  getDataYScale() {\n    return d3\n      .scaleLinear()\n      .domain([1500, 2500])\n      .range([this.props.height - this.props.padding, this.props.padding]);\n  }\n  getDeathYScale() {\n    return d3\n      .scaleLinear()\n      .domain([50, 100])\n      .range([this.props.height - this.props.padding, this.props.padding]);\n  }\n\n  render() {\n    const xScale = this.getXScale();\n    const yDataScale = this.getDataYScale();\n    const yDeathDataScale = this.getDeathYScale();\n\n    return (\n      <svg width={this.props.width} height={this.props.height}>\n        <Lines\n          xScale={xScale}\n          yScale={yDataScale}\n          {...this.props}\n          data={this.props.data}\n          color=\"#cbcfd6\"\n        />\n        <Lines\n          xScale={xScale}\n          yScale={yDeathDataScale}\n          {...this.props}\n          data={this.props.deathData}\n          color=\"#000000\"\n        />\n        <DataCircles\n          xScale={xScale}\n          yScale={yDataScale}\n          {...this.props}\n          data={this.props.data}\n          color=\"#cbcfd6\"\n        />\n        <DataCircles\n          xScale={xScale}\n          yScale={yDeathDataScale}\n          {...this.props}\n          data={this.props.deathData}\n          color=\"#000000\"\n        />\n        <XYAxis\n          xScale={xScale}\n          yScale={yDataScale}\n          otherYScale={yDeathDataScale}\n          {...this.props}\n        />\n      </svg>\n    );\n  }\n}\n\nclass LineChart extends React.Component {\n  componentWillMount() {\n    this.getData();\n  }\n\n  getData() {\n    // each datapoint in form of [year, age, nextYear, nextAge]\n    const myData = [\n      [1983, 2055],\n      [1984, 2056],\n      [1986, 2053],\n      [1988, 2061],\n      [1990, 2164],\n      [1992, 2162],\n      [1994, 2189],\n      [1996, 2159],\n      [1998, 2209],\n      [2000, 2183],\n      [2002, 2155],\n      [2004, 2124],\n      [2006, 2124],\n      [2008, 2126],\n      [2010, 2199],\n      [2012, 2228],\n    ];\n    this.setState({\n      data: myData\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else return [yr[0], yr[1], [arr[i - 1][0]], [arr[i - 1][1]]];\n        })\n        .filter(d => !!d),\n      deathData: myData\n        .map(d => [d[0], d[1] / 27 + (Math.random() - 0.5) * 2])\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else return [yr[0], yr[1], [arr[i - 1][0]], [arr[i - 1][1]]];\n        })\n        .filter(d => !!d),\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Total kCal Consumption & Mortality v. Time</h1>\n        <LineGraph\n          data={this.state.data}\n          deathData={this.state.deathData}\n          {...settings}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withData(LineChart);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport { withData } from '../../Contexts/DataContext/withData';\nimport { Typography } from 'antd';\n\nimport './ScatterPlot.css';\n\nconst { Title } = Typography;\n\nclass Axis extends React.Component {\n  static propTypes = {\n    translate: PropTypes.string.isRequired,\n    orient: PropTypes.oneOf(['bottom', 'top', 'left']).isRequired,\n    scale: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const node = this.refs.axisContainer;\n    const baseAxis =\n      this.props.orient === 'bottom'\n        ? d3.axisBottom()\n        : this.props.orient === 'left'\n        ? d3.axisLeft()\n        : null;\n    const axis = baseAxis.ticks(5).scale(this.props.scale);\n\n    d3.select(node).call(axis);\n  };\n\n  render() {\n    return (\n      <g\n        className=\"axis\"\n        ref=\"axisContainer\"\n        transform={this.props.translate}\n      />\n    );\n  }\n}\n\nclass XYAxis extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      padding: PropTypes.number,\n    }),\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { settings } = this.props;\n\n    return (\n      <g className=\"xy-axis\">\n        <Axis\n          translate={`translate(0, ${settings.height - settings.padding})`}\n          scale={this.props.xScale}\n          orient=\"bottom\"\n        />\n        <Axis\n          translate={`translate(${settings.padding}, 0)`}\n          scale={this.props.yScale}\n          orient=\"left\"\n        />\n      </g>\n    );\n  }\n}\n\nclass DataCircles extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      numDataPoints: PropTypes.number,\n    }),\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  renderCircle = coords => {\n    return (\n      <circle\n        cx={this.props.xScale(coords[0])}\n        cy={this.props.yScale(coords[1])}\n        r={2}\n        key={Math.random() * 1}\n      />\n    );\n  };\n\n  render() {\n    return <g>{this.props.data.map(this.renderCircle)}</g>;\n  }\n}\n\nclass ScatterPlot extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      numDataPoints: PropTypes.number,\n      maxRange: PropTypes.func,\n    }),\n    data: PropTypes.array.isRequired,\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n  };\n\n  getXScale = () => {\n    const { settings } = this.props;\n\n    const xMax = d3.max(this.props.data, d => d[0]);\n\n    return d3\n      .scaleLinear()\n      .domain([0, xMax])\n      .range([settings.padding, settings.width - settings.padding * 2]);\n  };\n\n  getYScale = () => {\n    const { settings } = this.props;\n\n    const yMax = d3.max(this.props.data, d => d[1]);\n\n    return d3\n      .scaleLinear()\n      .domain([0, yMax])\n      .range([settings.height - settings.padding, settings.padding]);\n  };\n\n  render() {\n    const { settings } = this.props;\n\n    const xScale = settings.xScale || this.getXScale();\n    const yScale = settings.yScale || this.getYScale();\n\n    return (\n      <svg width={settings.width} height={settings.height}>\n        <DataCircles xScale={xScale} yScale={yScale} {...this.props} />\n        <XYAxis xScale={xScale} yScale={yScale} {...this.props} />\n      </svg>\n    );\n  }\n}\n\nclass ScatterPlotViz extends Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      numDataPoints: PropTypes.number,\n      maxRange: PropTypes.func,\n    }),\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n  };\n  static defaultProps = {\n    settings: {\n      width: 1000,\n      height: 600,\n      padding: 30,\n      numDataPoints: 50,\n      maxRange: () => Math.random() * 1000,\n    },\n  };\n\n  componentWillMount() {\n    this.randomizeData();\n  }\n\n  randomizeData = () => {\n    const { settings } = this.props;\n\n    const randomData = d3.range(settings.numDataPoints).map(() => {\n      return [\n        Math.floor(Math.random() * settings.maxRange()),\n        Math.floor(Math.random() * settings.maxRange()),\n      ];\n    });\n    this.setState({ data: randomData });\n  };\n\n  render() {\n    const { settings } = this.props;\n\n    return (\n      <div>\n        <Title>Sample Scatterplot</Title>\n        <ScatterPlot data={this.state.data} settings={settings} />\n        <div className=\"controls\">\n          <button className=\"btn randomize\" onClick={this.randomizeData}>\n            Randomize Data\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withData(ScatterPlotViz);\n","export default {\n  'Grand Total - Animal Protein - Food supply': 'Animal Protein',\n  'Grand Total - Carbs - Food supply': 'Carbs',\n  'Grand Total - Fat - Food supply': 'Fat',\n  'Grand Total - Food supply': 'Grand Total',\n  'Grand Total - Plant Protein - Food supply': 'Plant Protein',\n  'Grand Total - Protein - Food supply': 'Protein',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nimport './Waterfall.css';\nimport MacroNameMap from '../../../Modules/MacroNameMap';\n\nconst MODE = ['ALIGN', 'FOLLOW'];\n\nclass Axis extends React.Component {\n  static propTypes = {\n    translate: PropTypes.string.isRequired,\n    orient: PropTypes.oneOf(['bottom', 'top', 'left']).isRequired,\n    scale: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const node = this.refs.axisContainer;\n    const baseAxis =\n      this.props.orient === 'bottom'\n        ? d3.axisBottom()\n        : this.props.orient === 'top'\n        ? d3.axisTop()\n        : this.props.orient === 'left'\n        ? d3.axisLeft()\n        : null;\n    const axis = baseAxis.ticks(5).scale(this.props.scale);\n\n    d3.select(node).call(axis);\n  };\n\n  render() {\n    return (\n      <g\n        className=\"axis\"\n        ref=\"axisContainer\"\n        transform={this.props.translate}\n      />\n    );\n  }\n}\n\nclass XYAxis extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      padding: PropTypes.number,\n    }),\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { settings } = this.props;\n    return (\n      <g className=\"xy-axis\">\n        <Axis\n          translate={`translate(0, ${settings.padding})`}\n          scale={this.props.xScale}\n          orient=\"top\"\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(${settings.width / 2}, 15)`}\n        >\n          [kCal / person / day]\n        </text>\n        <Axis\n          translate={`translate(${settings.width / 2}, 0)`}\n          scale={this.props.yScale}\n          orient=\"left\"\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(${settings.width / 2}, ${settings.height -\n            settings.padding +\n            15})`}\n        >\n          [year]\n        </text>\n      </g>\n    );\n  }\n}\n\nclass DataRectangles extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      numDataPoints: PropTypes.number,\n    }),\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  renderRect = coord => {\n    const { settings } = this.props;\n\n    if (settings.mode === MODE[0]) {\n      var dist = settings.width / 2 - this.props.xScale(coord.xDiff);\n      var width = Math.abs(dist);\n      var x = dist > 0 ? this.props.xScale(coord.xDiff) : settings.width / 2;\n    } else if (settings.mode === MODE[1]) {\n      dist = this.props.xScale(coord.xAbs) - this.props.xScale(coord.xLast);\n      width = Math.abs(dist);\n      x =\n        coord.xDiff > 0\n          ? this.props.xScale(coord.xLast)\n          : this.props.xScale(coord.xAbs);\n    }\n\n    return (\n      <rect\n        x={x}\n        y={this.props.yScale(coord.year)}\n        width={width}\n        height={\n          (settings.height - settings.padding * 2) / settings.numDataPoints\n        }\n        className={coord.xDiff > 0 ? 'goodBar' : 'badBar'}\n        key={Math.random() * 1}\n      />\n    );\n  };\n\n  renderRectText = coord => {\n    const { settings } = this.props;\n    if (settings.mode === MODE[0]) {\n      var dist = settings.width / 2 - this.props.xScale(coord.xDiff);\n      var x = settings.width / 2 - dist;\n    } else if (settings.mode === MODE[1]) {\n      dist = this.props.xScale(coord.xAbs) - this.props.xScale(coord.xLast);\n      x = this.props.xScale(coord.xLast) + (coord.xDiff > 0 ? 3 : -3);\n    }\n\n    return (\n      <text\n        textAnchor={coord.xDiff > 0 ? 'start' : 'end'}\n        x={x}\n        y={\n          this.props.yScale(coord.year) +\n          settings.height / settings.numDataPoints / 2 +\n          3\n        }\n        key={Math.random() * 1}\n      >\n        {coord.xDiff > 0 && '+'}\n        {coord.xDiff.toFixed(1)}\n      </text>\n    );\n  };\n\n  render() {\n    return (\n      <g>\n        {this.props.data.map(this.renderRect)}\n        {this.props.data.map(this.renderRectText)}\n      </g>\n    );\n  }\n}\n\nclass WaterfallPlot extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      baseYear: PropTypes.number,\n      numDataPoints: PropTypes.number,\n      maxRange: PropTypes.func,\n    }),\n    data: PropTypes.array.isRequired,\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n  };\n\n  getXScale = () => {\n    const { settings } = this.props;\n\n    if (settings.mode === MODE[0]) {\n      var xMin = d3.min(this.props.data, d => d.xDiff);\n      var xMax = d3.max(this.props.data, d => d.xDiff);\n    } else if (settings.mode === MODE[1]) {\n      xMin = d3.min(this.props.data, d => d.xAbs);\n      xMax = d3.max(this.props.data, d => d.xAbs);\n    }\n\n    const absMax = d3.max([Math.abs(xMin), Math.abs(xMax)]);\n    return d3\n      .scaleLinear()\n      .domain([-absMax, absMax])\n      .range([settings.padding, settings.width - settings.padding]);\n  };\n\n  getYScale = () => {\n    const { settings } = this.props;\n\n    const yMin = d3.min(this.props.data, d => d.year);\n    const yMax = d3.max(this.props.data, d => d.year);\n\n    return d3\n      .scaleLinear()\n      .domain([yMin, yMax + 1])\n      .range([settings.padding, settings.height - settings.padding]);\n  };\n\n  render() {\n    const { settings } = this.props;\n\n    const xScale = this.props.xScale || this.getXScale();\n    const yScale = this.props.xScale || this.getYScale();\n\n    return (\n      <svg width={settings.width} height={settings.height}>\n        <DataRectangles xScale={xScale} yScale={yScale} {...this.props} />\n        <XYAxis xScale={xScale} yScale={yScale} {...this.props} />\n      </svg>\n    );\n  }\n}\n\nclass Waterfall extends Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      baseYear: PropTypes.number,\n      numDataPoints: PropTypes.number,\n      maxRange: PropTypes.func,\n    }),\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n  };\n  static defaultProps = {\n    settings: {\n      width: 300,\n      height: 400,\n      padding: 40,\n      baseYear: 1985,\n      numDataPoints: 30,\n      maxRange: () => Math.random() * 100,\n    },\n  };\n\n  state = {\n    mode: MODE[1],\n  };\n\n  componentWillMount() {\n    this.processData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) this.processData();\n  }\n\n  toggleMode = () => {\n    const { mode } = this.state;\n    if (mode === MODE[0]) this.setState({ mode: MODE[1] });\n    else if (mode === MODE[1]) this.setState({ mode: MODE[0] });\n  };\n\n  processData = () => {\n    console.log(this.props);\n    const nextData = this.props.data\n      .map((datum, index, arr) => {\n        if (index !== 0) {\n          return {\n            year: datum[0],\n            xLast: arr[index - 1][1],\n            xDiff: datum[1] - arr[index - 1][1],\n            xAbs: datum[1],\n          };\n        }\n        return null;\n      })\n      .filter(val => !!val);\n    this.setState({ data: nextData });\n  };\n\n  render() {\n    const { settings, country, group } = this.props;\n\n    return (\n      <div style={{ width: settings.width }}>\n        <h3>\n          {country} - {MacroNameMap[group]}\n        </h3>\n        <WaterfallPlot\n          data={this.state.data}\n          settings={{ ...settings, mode: this.state.mode }}\n        />\n        <div className=\"controls\">\n          <button className=\"btn randomize\" onClick={this.toggleMode}>\n            Toggle Mode\n          </button>\n          <button className=\"btn randomize\" onClick={this.processData}>\n            Randomize Data\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Waterfall;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from 'antd';\n\nconst Option = Select.Option;\n\nconst Selector = props => {\n  function handleChange(value) {\n    console.log(`selected ${value}`);\n    props.handleChange(value);\n  }\n\n  return (\n    <Select\n      {...props}\n      showSearch\n      style={{ width: 200 }}\n      placeholder={props.placeholder || 'Select one'}\n      optionFilterProp=\"children\"\n      onChange={handleChange}\n      filterOption={(input, option) =>\n        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {props.options.map((option, index) => (\n        <Option key={option.value || index} value={option.value || option}>\n          {option.display || option}\n        </Option>\n      ))}\n    </Select>\n  );\n};\n\nSelector.propTypes = {\n  placeholder: PropTypes.string,\n  handleChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.shape({\n        value: PropTypes.string.isRequired,\n        display: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n          .isRequired,\n      }),\n    ]).isRequired\n  ).isRequired,\n};\n\nexport default Selector;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './WaterfallConfig.css';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { withInteraction } from '../../../Contexts/InteractionContext/withInteraction';\nimport Selector from '../../../Components/Selector';\nimport MacroNameMap from '../../../Modules/MacroNameMap';\nimport { Button } from 'antd';\n\nclass WaterfallConfig extends Component {\n  static propTypes = {\n    toggleView: PropTypes.func.isRequired,\n    interaction: PropTypes.shape({\n      fields: PropTypes.shape({\n        availableCountries: PropTypes.arrayOf(PropTypes.string.isRequired)\n          .isRequired,\n      }).isRequired,\n    }).isRequired,\n  };\n\n  render() {\n    const { availableCountries } = this.props.interaction.fields;\n    const { country, group } = this.props;\n\n    const GET_GROUP_OPTIONS = gql`\n      {\n        names(type: MACRO)\n      }\n    `;\n\n    const handleChange = type => value => {\n      this.props.handleChange({ [type]: value });\n    };\n\n    return (\n      <Query query={GET_GROUP_OPTIONS}>\n        {({ loading, error, data }) => {\n          if (loading) return 'Loading...';\n          if (error) console.log('Error loading gql data for YearSlider');\n\n          return (\n            <div className=\"WaterfallConfig\">\n              <h2>Waterfall Config</h2>\n              <Selector\n                placeholder=\"Select a country\"\n                options={availableCountries}\n                handleChange={handleChange('country')}\n                value={country || undefined}\n              />\n              <Selector\n                placeholder=\"Select a group\"\n                options={data.names.map(name => ({\n                  value: name,\n                  display: MacroNameMap[name],\n                }))}\n                handleChange={handleChange('group')}\n                value={group || undefined}\n              />\n              <Button type=\"primary\" onClick={this.props.toggleView}>\n                Visualize\n              </Button>\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withInteraction(WaterfallConfig);\n","import React, { Component } from 'react';\nimport { withData } from '../../../Contexts/DataContext/withData';\nimport WaterfallViz from '../WaterfallViz';\nimport WaterfallConfig from '../WaterfallConfig';\n\nclass WaterfallContainer extends Component {\n  state = {\n    displayConfig: true,\n    country: null,\n    group: null,\n    data: [],\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data.data !== this.props.data.data) this.filterData();\n  }\n\n  toggleView = () => {\n    this.setState(state => ({ displayConfig: !state.displayConfig }));\n  };\n\n  handleChange = async diff => {\n    await this.setState({ ...diff });\n    this.filterData();\n  };\n\n  filterData = () => {\n    const { country, group } = this.state;\n    let nextData = [];\n    if (!!country && !!group) {\n      nextData = this.props.data.data.map(d => [\n        d.year,\n        d.countries\n          .filter(c => c.country === country)[0]\n          .items.filter(item => item.name === group)[0].value,\n      ]);\n    }\n    this.setState({ data: nextData });\n  };\n\n  render() {\n    const { data, ...config } = this.state;\n    return (\n      <div>\n        <span>\n          <button\n            onClick={this.toggleView}\n            type=\"primary\"\n            shape=\"circle\"\n            icon=\"search\"\n          >\n            switch\n          </button>\n        </span>\n        {this.state.displayConfig ? (\n          <WaterfallConfig handleChange={this.handleChange} {...config} />\n        ) : (\n          <WaterfallViz {...this.props} {...config} data={data} />\n        )}\n      </div>\n    );\n  }\n}\n\nWaterfallContainer.propTypes = {};\n\nexport default withData(WaterfallContainer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { withData } from '../../Contexts/DataContext/withData';\nimport { withInteraction } from '../../Contexts/InteractionContext/withInteraction';\nimport { Slider, Typography } from 'antd';\n\nconst { Text } = Typography;\n\nclass MySlider extends Component {\n  constructor(props) {\n    super(props);\n    const { min, max } = this.props;\n    this.handleRelease([min, max]);\n  }\n\n  static propTypes = {\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    interaction: PropTypes.shape({\n      setFields: PropTypes.func.isRequired,\n    }).isRequired,\n    data: PropTypes.shape({\n      setQuery: PropTypes.func.isRequired,\n    }).isRequired,\n  };\n\n  handleRelease = value => {\n    // Create array of all years from base year to top year\n    const selectedYears = [...Array(value[1] - value[0] + 1).keys()].map(\n      v => value[0] + v\n    );\n    this.props.data.setQuery({\n      years: selectedYears,\n    });\n    this.props.interaction.setFields({\n      availableYears: selectedYears,\n    });\n  };\n\n  render() {\n    const { min, max } = this.props;\n\n    return (\n      <div>\n        <Text>Year</Text>\n        <Slider\n          range\n          defaultValue={[min, max]}\n          min={min}\n          max={max}\n          onAfterChange={this.handleRelease}\n        />\n      </div>\n    );\n  }\n}\n\nclass YearSlider extends Component {\n  render() {\n    const GET_YEAR_RANGE = gql`\n      {\n        yearRange {\n          min\n          max\n        }\n      }\n    `;\n\n    return (\n      <Query query={GET_YEAR_RANGE}>\n        {({ loading, error, data }) => {\n          if (loading) return 'Loading...';\n          if (error) console.log('Error loading gql data for YearSlider');\n          const { min, max } = data.yearRange;\n\n          return <MySlider {...this.props} min={min} max={max} />;\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withInteraction(withData(YearSlider));\n","import React, { Component } from 'react';\nimport VisualizationBase from '../VisualizationBase';\nimport {\n  CountryPicker,\n  YearSlider,\n  LineChart,\n  Waterfall,\n  ScatterPlot,\n} from '../../Visualizations';\nimport { Layout } from 'antd';\n\nimport './VisualizationContainer.css';\n\nconst { Sider, Content } = Layout;\n\nclass VisualizationContainer extends Component {\n  state = {\n    waterfalls: [],\n  };\n\n  openVisualization = visualizationComponent => {\n    this.setState({ openVisualization: visualizationComponent });\n  };\n\n  render() {\n    return (\n      <Layout style={{ height: '100vh' }}>\n        <Sider theme=\"light\" className=\"sideBar\">\n          <h1 className=\"App-title\">Nutrition InfoViz</h1>\n          {/* <VisualizationSelector openVisualization={this.openVisualization} /> */}\n          <CountryPicker />\n          <br />\n          <YearSlider />\n        </Sider>\n        <Content className=\"dashboard\">\n          <VisualizationBase>\n            <ScatterPlot />\n          </VisualizationBase>\n          <VisualizationBase>\n            <LineChart />\n          </VisualizationBase>\n          {this.state.waterfalls}\n          <VisualizationBase\n            onClick={() =>\n              this.setState({\n                waterfalls: [\n                  ...this.state.waterfalls,\n                  <VisualizationBase>\n                    <Waterfall />\n                  </VisualizationBase>,\n                ],\n              })\n            }\n            style={{ width: 375 }}\n          >\n            Click to add Waterfall\n          </VisualizationBase>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\n// Receives no props\nVisualizationContainer.propTypes = {};\n\nexport default VisualizationContainer;\n","import * as React from 'react';\nimport { DataContext } from './data-context';\nimport ApolloClient from 'apollo-boost';\nimport gql from 'graphql-tag';\nimport { ApolloProvider } from 'react-apollo';\n\nexport default class DataProvider extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      setDate: this.setData,\n      setQuery: this.setQuery,\n      data: [],\n      queryParams: {\n        type: 'MACRO',\n        countries: [],\n        years: [],\n      },\n      loading: true,\n    };\n    this.client = new ApolloClient({\n      uri: 'http://localhost:4000/graphql',\n      // uri: 'http://gql.healthviz.xyz/graphql',\n    });\n    this.getData();\n  }\n\n  setQuery = async nextQuery => {\n    await this.setState(state => ({\n      queryParams: {\n        ...state.queryParams,\n        ...nextQuery,\n      },\n    }));\n    this.getData();\n  };\n\n  setData = nextData => {\n    // save data to state\n    this.setState({ data: nextData, loading: false });\n    console.log('setData', nextData);\n  };\n\n  getData = () => {\n    const { years, countries, type } = this.state.queryParams;\n    console.log(this.state.queryParams);\n    this.setState({ loading: true });\n    this.client\n      .query({\n        query: gql`\n          {\n            itemByYearCountry(\n              ${years.length > 0 ? `years:${JSON.stringify(years)}, ` : ''}\n              ${\n                countries.length > 0\n                  ? `countries:${JSON.stringify(countries)}, `\n                  : ''\n              }\n              ${!!type ? `type:${type}` : ''}\n            )\n              {\n              year\n              countries {\n                country\n                items {\n                  country\n                  year\n                  type\n                  name\n                  value\n                }\n              }\n            }\n          }\n        `,\n      })\n      .then(result => this.setData(result.data.itemByYearCountry))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <DataContext.Provider value={this.state}>\n        <ApolloProvider client={this.client}>\n          {this.props.children}\n        </ApolloProvider>\n      </DataContext.Provider>\n    );\n  }\n}\n","import * as React from 'react';\nimport { InteractionContext } from './interaction-context';\n\nexport default class InteractionProvider extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      setFields: this.setFields,\n      fields: {\n        availableYears: [],\n        availableCountries: [],\n        selectedYear: null,\n        selectedCountry: null,\n        hoveredYear: null,\n        hoveredCountry: null,\n      },\n    };\n  }\n\n  setFields = nextFieldsDiff => {\n    // save Interaction to state\n    this.setState(state => ({\n      fields: { ...state.fields, ...nextFieldsDiff },\n    }));\n  };\n\n  render() {\n    return (\n      <InteractionContext.Provider value={this.state}>\n        {this.props.children}\n      </InteractionContext.Provider>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport VisualizationContainer from '../Components/VisualizationContainer';\nimport DataProvider from '../Contexts/DataContext/DataProvider';\nimport InteractionProvider from '../Contexts/InteractionContext/InteractionProvider';\n\nclass App extends Component {\n  render() {\n    return (\n      <DataProvider>\n        <InteractionProvider>\n          <div className=\"App\">\n            <VisualizationContainer />\n          </div>\n        </InteractionProvider>\n      </DataProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}