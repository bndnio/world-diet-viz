{"version":3,"sources":["Contexts/DataContext/data-context.js","Contexts/DataContext/withData.jsx","Contexts/InteractionContext/interaction-context.js","Contexts/InteractionContext/withInteraction.jsx","Visualizations/CountryPicker/CountryPicker.jsx","Components/Selector/Selector.jsx","Modules/MacroNameMap.js","Visualizations/LineChart/LineChart.jsx","Visualizations/ScatterPlot/ScatterPlot.jsx","Visualizations/Waterfall/WaterfallViz/Waterfall.jsx","Visualizations/Waterfall/WaterfallConfig/WaterfallConfig.jsx","Visualizations/Waterfall/WaterfallContainer/WaterfallContainer.jsx","Visualizations/YearSlider/YearSlider.jsx","Components/VisualizationContainer/VisualizationContainer.jsx","Contexts/DataContext/DataProvider.jsx","Contexts/InteractionContext/InteractionProvider.jsx","App/App.jsx","serviceWorker.js","index.js"],"names":["DataContext","React","withData","Component","props","react","Consumer","dataProps","Object","assign","data","InteractionContext","withInteraction","interactionProps","interaction","Text","Option","es_select","handleChange","value","_this","setQuery","countries","setFields","availableCountries","_this2","this","GET_COUNTRIES","gql","_templateObject","react_default","a","createElement","react_apollo_esm","query","_ref","loading","error","console","log","mode","style","width","placeholder","defaultValue","onChange","map","country","key","Selector","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","options","index","Selector_Option","display","MacroNameMap","Grand Total - Animal Protein - Food supply","Grand Total - Carbs - Food supply","Grand Total - Fat - Food supply","Grand Total - Food supply","Grand Total - Plant Protein - Food supply","Grand Total - Protein - Food supply","settings","height","padding","XAxis","renderXAxis","node","refs","axisContainer","axis","d3","ticks","tickFormat","scale","call","className","ref","transform","translate","YAxis","renderYAxis","flip","XYAxis","LineChart_XAxis","concat","xScale","textAnchor","LineChart_YAxis","yScale","otherYScale","Line","coords","x1","y1","x2","y2","strokeWidth","stroke","color","renderLine","bind","FilledSeries","_this$props","Fragment","LineChart_FillBottom","LineChart_Line","FillBottom","points","fill","renderFillBottom","LineGraph","availableYears","fields","minYear","maxYear","length","domain","range","getXScale","yDataScale","getDataYScale","yDeathDataScale","getDeathYScale","LineChart_FilledSeries","measure3","measure2","measure1","deathData","LineChart_XYAxis","processData","prevProps","selectedCountry","nextData","d","year","filter","c","items","reduce","acc","item","objectSpread","defineProperty","name","setState","totalData","yr","i","arr","Math","random","carbData","fatData","animalProteinData","plantProteinData","card","title","Components_Selector_Selector","disabled","LineChart_LineGraph","state","measure4","Axis","renderAxis","orient","ScatterPlot_Axis","DataCircles","renderCircle","cx","cy","r","ScatterPlot","_this3","xMax","getYScale","yMax","ScatterPlot_DataCircles","ScatterPlot_XYAxis","ScatterPlotViz","randomizeData","_this4","randomData","numDataPoints","floor","maxRange","ScatterPlot_ScatterPlot_ScatterPlot","onClick","defaultProps","MODE","_this$props$settings","Waterfall_Axis","DataRectangles","renderRect","coord","dist","xDiff","abs","x","xAbs","xLast","y","renderRectText","toFixed","WaterfallPlot","xMin","absMax","yMin","Waterfall_DataRectangles","Waterfall_XYAxis","Waterfall","toggleMode","datum","val","group","Waterfall_WaterfallPlot","baseYear","GET_GROUP_OPTIONS","WaterfallConfig_templateObject","type","undefined","names","es_button","toggleView","displayConfig","_callee","diff","regenerator_default","wrap","_context","prev","next","filterData","stop","_this$state","_this$state2","config","objectWithoutProperties","Waterfall_WaterfallConfig_WaterfallConfig","Waterfall_WaterfallViz_Waterfall","MySlider","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleRelease","selectedYears","toConsumableArray","Array","keys","v","years","min","max","_this$props2","YearSlider_Text","slider","onAfterChange","GET_YEAR_RANGE","YearSlider_templateObject","_data$yearRange","yearRange","YearSlider_MySlider","Sider","Content","VisualizationContainer","waterfalls","layout","theme","Visualizations_CountryPicker_CountryPicker","Visualizations_YearSlider_YearSlider","Visualizations_ScatterPlot_ScatterPlot","Visualizations_LineChart_LineChart","Waterfall_WaterfallContainer_WaterfallContainer","DataProvider","asyncToGenerator","mark","nextQuery","queryParams","getData","_x","apply","arguments","setData","_this$state$queryPara","client","DataProvider_templateObject","JSON","stringify","then","result","itemByYearCountry","catch","err","setDate","ApolloClient","uri","Provider","InteractionProvider","nextFieldsDiff","selectedYear","hoveredYear","hoveredCountry","App","DataProvider_DataProvider","InteractionProvider_InteractionProvider","Components_VisualizationContainer_VisualizationContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b3a598d.chunk.js","sourcesContent":["import * as React from 'react';\n\nexport const DataContext = React.createContext();\n","import * as React from 'react';\nimport { DataContext } from './data-context';\n\nexport function withData(Component) {\n  return function DataComponent(props) {\n    return (\n      <DataContext.Consumer>\n        {dataProps => <Component {...props} data={dataProps} />}\n      </DataContext.Consumer>\n    );\n  };\n}\n","import * as React from 'react';\n\nexport const InteractionContext = React.createContext();\n","import * as React from 'react';\nimport { InteractionContext } from './interaction-context';\n\nexport function withInteraction(Component) {\n  return function InteractionComponent(props) {\n    return (\n      <InteractionContext.Consumer>\n        {interactionProps => (\n          <Component {...props} interaction={interactionProps} />\n        )}\n      </InteractionContext.Consumer>\n    );\n  };\n}\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { withData } from '../../Contexts/DataContext/withData';\nimport { withInteraction } from '../../Contexts/InteractionContext/withInteraction';\nimport { Select, Typography } from 'antd';\n\nconst { Text } = Typography;\n\nconst Option = Select.Option;\n\nclass CountryPicker extends Component {\n  handleChange = value => {\n    this.props.data.setQuery({ countries: value || [] });\n    this.props.interaction.setFields({ availableCountries: value || [] });\n  };\n\n  render() {\n    const GET_COUNTRIES = gql`\n      {\n        countries\n      }\n    `;\n\n    return (\n      <Query query={GET_COUNTRIES}>\n        {({ loading, error, data }) => {\n          if (loading) return 'Loading...';\n          if (error) console.log('Error loading gql data for CountryPicker');\n          const { countries } = data;\n\n          return (\n            <div>\n              <Text>Country</Text>\n              <Select\n                mode=\"multiple\"\n                style={{ width: '100%' }}\n                placeholder=\"Please select\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n              >\n                {countries.map(country => (\n                  <Option key={country}>{country}</Option>\n                ))}\n              </Select>\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withInteraction(withData(CountryPicker));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from 'antd';\n\nconst Option = Select.Option;\n\nconst Selector = props => {\n  function handleChange(value) {\n    props.handleChange(value);\n  }\n\n  return (\n    <Select\n      {...props}\n      showSearch\n      style={{ width: 200 }}\n      placeholder={props.placeholder || 'Select one'}\n      optionFilterProp=\"children\"\n      onChange={handleChange}\n      filterOption={(input, option) =>\n        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {props.options.map((option, index) => (\n        <Option key={option.value || index} value={option.value || option}>\n          {option.display || option}\n        </Option>\n      ))}\n    </Select>\n  );\n};\n\nSelector.propTypes = {\n  placeholder: PropTypes.string,\n  handleChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.shape({\n        value: PropTypes.string.isRequired,\n        display: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n          .isRequired,\n      }),\n    ]).isRequired\n  ).isRequired,\n};\n\nexport default Selector;\n","export default {\n  'Grand Total - Animal Protein - Food supply': 'Animal Protein',\n  'Grand Total - Carbs - Food supply': 'Carbs',\n  'Grand Total - Fat - Food supply': 'Fat',\n  'Grand Total - Food supply': 'Grand Total',\n  'Grand Total - Plant Protein - Food supply': 'Plant Protein',\n  'Grand Total - Protein - Food supply': 'Protein',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport { Card } from 'antd';\nimport Selector from '../../Components/Selector';\nimport MacroNameMap from '../../Modules/MacroNameMap';\nimport { withData } from '../../Contexts/DataContext/withData';\nimport { withInteraction } from '../../Contexts/InteractionContext/withInteraction';\n\nimport './LineChart.css';\n\nconst settings = {\n  width: 900,\n  height: 300,\n  padding: 50,\n};\n\nclass XAxis extends React.Component {\n  static propTypes = {\n    translate: PropTypes.string.isRequired,\n    scale: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.renderXAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderXAxis();\n  }\n\n  renderXAxis() {\n    const node = this.refs.axisContainer;\n    const baseAxis = d3\n      .axisBottom()\n      .ticks(5)\n      .tickFormat(d3.format('d'));\n    const axis = baseAxis.scale(this.props.scale);\n    d3.select(node).call(axis);\n  }\n\n  render() {\n    return (\n      <g\n        className=\"axis\"\n        ref=\"axisContainer\"\n        transform={this.props.translate}\n      />\n    );\n  }\n}\n\nclass YAxis extends React.Component {\n  static propTypes = {\n    translate: PropTypes.string.isRequired,\n    scale: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.renderYAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderYAxis();\n  }\n\n  renderYAxis() {\n    const node = this.refs.axisContainer;\n    let baseAxis;\n    if (this.props.flip) baseAxis = d3.axisRight();\n    else baseAxis = d3.axisLeft();\n    const axis = baseAxis.ticks(5).scale(this.props.scale);\n    d3.select(node).call(axis);\n  }\n\n  render() {\n    return (\n      <g\n        className=\"axis\"\n        ref=\"axisContainer\"\n        transform={this.props.translate}\n      />\n    );\n  }\n}\n\nclass XYAxis extends React.Component {\n  static propTypes = {\n    padding: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <g className=\"LE-xy-axis\">\n        <XAxis\n          translate={`translate(0, ${this.props.height -\n            (this.props.padding * 2) / 3})`}\n          scale={this.props.xScale}\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(${settings.width / 2 -\n            this.props.padding / 2}, ${settings.height - 5})`}\n        >\n          [year]\n        </text>\n        <YAxis\n          translate={`translate(${this.props.padding}, 0)`}\n          scale={this.props.yScale}\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(10, ${settings.height / 2}), rotate(-90)`}\n        >\n          [total kCal]\n        </text>\n        <YAxis\n          translate={`translate(${settings.width - this.props.padding * 2}, 0)`}\n          scale={this.props.otherYScale}\n          flip\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(${settings.width - 10}, ${settings.height /\n            2}), rotate(-90)`}\n        >\n          [Mean Age of Death]\n        </text>\n      </g>\n    );\n  }\n}\n\nclass Line extends React.Component {\n  static propTypes = {\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  renderLine(coords) {\n    return (\n      <line\n        x1={this.props.xScale(coords[0])}\n        y1={this.props.yScale(coords[1])}\n        x2={this.props.xScale(coords[2])}\n        y2={this.props.yScale(coords[3])}\n        strokeWidth={2}\n        stroke={this.props.color}\n      />\n    );\n  }\n\n  render() {\n    return <g>{this.props.data.map(this.renderLine.bind(this))}</g>;\n  }\n}\n\n// To be used later with interaction\n// class DataCircles extends React.Component {\n//   static propTypes = {\n//     xScale: PropTypes.func.isRequired,\n//     yScale: PropTypes.func.isRequired,\n//   };\n\n//   renderCircle(coords) {\n//     return (\n//       <circle\n//         cx={this.props.xScale(coords[2])}\n//         cy={this.props.yScale(coords[3])}\n//         r={3}\n//         key={Math.random()}\n//         fill={this.props.color}\n//       />\n//     );\n//   }\n\n//   render() {\n//     return <g>{this.props.data.map(this.renderCircle.bind(this))}</g>;\n//   }\n// }\n\nclass FilledSeries extends Component {\n  static propTypes = {\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n    data: PropTypes.array.isRequired,\n    color: PropTypes.string.isRequired,\n  };\n\n  render() {\n    const { xScale, yScale, data, color } = this.props;\n    return (\n      <React.Fragment>\n        <FillBottom xScale={xScale} yScale={yScale} data={data} color={color} />\n        <Line xScale={xScale} yScale={yScale} data={data} color=\"#ccddff\" />\n      </React.Fragment>\n    );\n  }\n}\n\nclass FillBottom extends React.Component {\n  static propTypes = {\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  renderFillBottom(coords) {\n    return (\n      <polygon\n        points={`\n        ${this.props.xScale(coords[0])},${this.props.yScale(0)}\n        ${this.props.xScale(coords[2])},${this.props.yScale(0)}\n        ${this.props.xScale(coords[2])},${this.props.yScale(coords[3])}\n        ${this.props.xScale(coords[0])},${this.props.yScale(coords[1])}\n        `}\n        fill={this.props.color}\n      />\n    );\n  }\n\n  render() {\n    return <g>{this.props.data.map(this.renderFillBottom.bind(this))}</g>;\n  }\n}\n\nclass LineGraph extends React.Component {\n  static propTypes = {\n    padding: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    data: PropTypes.array.isRequired,\n  };\n\n  getXScale() {\n    const { availableYears } = this.props.interaction.fields;\n    const minYear = availableYears[0];\n    const maxYear = availableYears[availableYears.length - 1];\n\n    return d3\n      .scaleLinear()\n      .domain([minYear, maxYear])\n      .range([this.props.padding, this.props.width - this.props.padding * 2]);\n  }\n\n  getDataYScale() {\n    return d3\n      .scaleLinear()\n      .domain([0, 2500])\n      .range([this.props.height - this.props.padding, this.props.padding]);\n  }\n  getDeathYScale() {\n    return d3\n      .scaleLinear()\n      .domain([50, 100])\n      .range([this.props.height - this.props.padding, this.props.padding]);\n  }\n\n  render() {\n    const xScale = this.getXScale();\n    const yDataScale = this.getDataYScale();\n    const yDeathDataScale = this.getDeathYScale();\n\n    return (\n      <svg width={this.props.width} height={this.props.height}>\n        <FilledSeries\n          xScale={xScale}\n          yScale={yDataScale}\n          data={this.props.data}\n          color=\"#edf3ff\"\n        />\n        {/* <FilledSeries\n          xScale={xScale}\n          yScale={yDataScale}\n          data={this.props.measure4}\n          color=\"#ff0000\"\n        /> */}\n        <FilledSeries\n          xScale={xScale}\n          yScale={yDataScale}\n          data={this.props.measure3}\n          color=\"#ddeaff\"\n        />\n        <FilledSeries\n          xScale={xScale}\n          yScale={yDataScale}\n          data={this.props.measure2}\n          color=\"#c1d8ff\"\n        />\n        <FilledSeries\n          xScale={xScale}\n          yScale={yDataScale}\n          data={this.props.measure1}\n          color=\"#a0c4ff\"\n        />\n        <Line\n          xScale={xScale}\n          yScale={yDeathDataScale}\n          {...this.props}\n          data={this.props.deathData}\n          color=\"#000000\"\n        />\n        <XYAxis\n          xScale={xScale}\n          yScale={yDataScale}\n          otherYScale={yDeathDataScale}\n          {...this.props}\n        />\n      </svg>\n    );\n  }\n}\n\nclass LineChart extends React.Component {\n  componentWillMount() {\n    this.processData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.data.data !== this.props.data.data ||\n      prevProps.interaction.fields.selectedCountry !==\n        this.props.interaction.fields.selectedCountry\n    ) {\n      this.processData();\n    }\n  }\n\n  processData() {\n    // each datapoint in form of [year, totalKCal, measure1, measure2, measure3]\n    console.log('processing');\n    const { selectedCountry } = this.props.interaction.fields;\n    let nextData = [];\n    if (!!selectedCountry) {\n      nextData = this.props.data.data.map(d => [\n        d.year,\n        d.countries\n          .filter(c => c.country === selectedCountry)[0]\n          .items.reduce(\n            (acc, item) => ({\n              ...acc,\n              [MacroNameMap[item.name]]: item.value,\n            }),\n            {}\n          ),\n      ]);\n    }\n\n    this.setState({\n      data: nextData,\n      // x1, y1, x2, y2\n      totalData: nextData\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else\n            return [\n              yr[0],\n              yr[1]['Grand Total'],\n              arr[i - 1][0],\n              arr[i - 1][1]['Grand Total'],\n            ];\n        })\n        .filter(d => !!d),\n      deathData: nextData\n        .map(d => [d[0], d[1] / 27 + (Math.random() - 0.5) * 2])\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else return [yr[0], yr[1], arr[i - 1][0], arr[i - 1][1]];\n        })\n        .filter(d => !!d),\n      carbData: nextData\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else\n            return [\n              yr[0],\n              yr[1]['Carbs'],\n              arr[i - 1][0],\n              arr[i - 1][1]['Carbs'],\n            ];\n        })\n        .filter(d => !!d),\n      fatData: nextData\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else\n            return [\n              yr[0],\n              yr[1]['Carbs'] + yr[1]['Fat'],\n              arr[i - 1][0],\n              arr[i - 1][1]['Carbs'] + arr[i - 1][1]['Fat'],\n            ];\n        })\n        .filter(d => !!d),\n      animalProteinData: nextData\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else\n            return [\n              yr[0],\n              yr[1]['Carbs'] + yr[1]['Fat'] + yr[1]['Animal Protein'],\n              arr[i - 1][0],\n              arr[i - 1][1]['Carbs'] +\n                arr[i - 1][1]['Fat'] +\n                arr[i - 1][1]['Animal Protein'],\n            ];\n        })\n        .filter(d => !!d),\n      plantProteinData: nextData\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else\n            return [\n              yr[0],\n              yr[1]['Carbs'] +\n                yr[1]['Fat'] +\n                yr[1]['Animal Protein'] +\n                yr[1]['Plant Protein'],\n              arr[i - 1][0],\n              arr[i - 1][1]['Carbs'] +\n                arr[i - 1][1]['Fat'] +\n                arr[i - 1][1]['Animal Protein'] +\n                arr[i - 1][1]['Plant Protein'],\n            ];\n        })\n        .filter(d => !!d),\n    });\n  }\n\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <span>\"Life Expectancy v. Total kCal Consumption\"</span>\n            <Selector\n              options={this.props.interaction.fields.availableCountries || []}\n              handleChange={value =>\n                this.props.interaction.setFields({ selectedCountry: value })\n              }\n              disabled={\n                this.props.data.loading ||\n                !this.props.interaction.fields.availableCountries\n              }\n            />\n          </div>\n        }\n        loading={\n          this.props.data.loading ||\n          !this.props.interaction.fields.availableCountries\n        }\n      >\n        {!this.props.interaction.fields.selectedCountry ? (\n          'select a country'\n        ) : (\n          <LineGraph\n            {...this.props}\n            data={this.state.totalData}\n            deathData={this.state.deathData}\n            measure1={this.state.carbData}\n            measure2={this.state.fatData}\n            measure3={this.state.animalProteinData}\n            measure4={this.state.plantProteinData}\n            {...settings}\n          />\n        )}\n      </Card>\n    );\n  }\n}\n\nexport default withInteraction(withData(LineChart));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport { Card } from 'antd';\nimport { withData } from '../../Contexts/DataContext/withData';\n\nimport './ScatterPlot.css';\n\nclass Axis extends React.Component {\n  static propTypes = {\n    translate: PropTypes.string.isRequired,\n    orient: PropTypes.oneOf(['bottom', 'top', 'left']).isRequired,\n    scale: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const node = this.refs.axisContainer;\n    const baseAxis =\n      this.props.orient === 'bottom'\n        ? d3.axisBottom()\n        : this.props.orient === 'left'\n        ? d3.axisLeft()\n        : null;\n    const axis = baseAxis.ticks(5).scale(this.props.scale);\n\n    d3.select(node).call(axis);\n  };\n\n  render() {\n    return (\n      <g\n        className=\"axis\"\n        ref=\"axisContainer\"\n        transform={this.props.translate}\n      />\n    );\n  }\n}\n\nclass XYAxis extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      padding: PropTypes.number,\n    }),\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { settings } = this.props;\n\n    return (\n      <g className=\"xy-axis\">\n        <Axis\n          translate={`translate(0, ${settings.height - settings.padding})`}\n          scale={this.props.xScale}\n          orient=\"bottom\"\n        />\n        <Axis\n          translate={`translate(${settings.padding}, 0)`}\n          scale={this.props.yScale}\n          orient=\"left\"\n        />\n      </g>\n    );\n  }\n}\n\nclass DataCircles extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      numDataPoints: PropTypes.number,\n    }),\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  renderCircle = coords => {\n    return (\n      <circle\n        cx={this.props.xScale(coords[0])}\n        cy={this.props.yScale(coords[1])}\n        r={2}\n        key={Math.random() * 1}\n      />\n    );\n  };\n\n  render() {\n    return <g>{this.props.data.map(this.renderCircle)}</g>;\n  }\n}\n\nclass ScatterPlot extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      numDataPoints: PropTypes.number,\n      maxRange: PropTypes.func,\n    }),\n    data: PropTypes.array.isRequired,\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n  };\n\n  getXScale = () => {\n    const { settings } = this.props;\n\n    const xMax = d3.max(this.props.data, d => d[0]);\n\n    return d3\n      .scaleLinear()\n      .domain([0, xMax])\n      .range([settings.padding, settings.width - settings.padding * 2]);\n  };\n\n  getYScale = () => {\n    const { settings } = this.props;\n\n    const yMax = d3.max(this.props.data, d => d[1]);\n\n    return d3\n      .scaleLinear()\n      .domain([0, yMax])\n      .range([settings.height - settings.padding, settings.padding]);\n  };\n\n  render() {\n    const { settings } = this.props;\n\n    const xScale = settings.xScale || this.getXScale();\n    const yScale = settings.yScale || this.getYScale();\n\n    return (\n      <svg width={settings.width} height={settings.height}>\n        <DataCircles xScale={xScale} yScale={yScale} {...this.props} />\n        <XYAxis xScale={xScale} yScale={yScale} {...this.props} />\n      </svg>\n    );\n  }\n}\n\nclass ScatterPlotViz extends Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      numDataPoints: PropTypes.number,\n      maxRange: PropTypes.func,\n    }),\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n  };\n  static defaultProps = {\n    settings: {\n      width: 350,\n      height: 350,\n      padding: 30,\n      numDataPoints: 50,\n      maxRange: () => Math.random() * 1000,\n    },\n  };\n\n  componentWillMount() {\n    this.randomizeData();\n  }\n\n  randomizeData = () => {\n    const { settings } = this.props;\n\n    const randomData = d3.range(settings.numDataPoints).map(() => {\n      return [\n        Math.floor(Math.random() * settings.maxRange()),\n        Math.floor(Math.random() * settings.maxRange()),\n      ];\n    });\n    this.setState({ data: randomData });\n  };\n\n  render() {\n    const { settings } = this.props;\n\n    return (\n      <Card title=\"Sample Scatterplot\">\n        <ScatterPlot data={this.state.data} settings={settings} />\n        <div className=\"controls\">\n          <button className=\"btn randomize\" onClick={this.randomizeData}>\n            Randomize Data\n          </button>\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default withData(ScatterPlotViz);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport { Card } from 'antd';\nimport MacroNameMap from '../../../Modules/MacroNameMap';\n\nimport './Waterfall.css';\n\nconst MODE = ['ALIGN', 'FOLLOW'];\n\nclass Axis extends React.Component {\n  static propTypes = {\n    translate: PropTypes.string.isRequired,\n    orient: PropTypes.oneOf(['bottom', 'top', 'left']).isRequired,\n    scale: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const node = this.refs.axisContainer;\n    const baseAxis =\n      this.props.orient === 'bottom'\n        ? d3.axisBottom()\n        : this.props.orient === 'top'\n        ? d3.axisTop()\n        : this.props.orient === 'left'\n        ? d3.axisLeft()\n        : null;\n    const axis = baseAxis.ticks(5).scale(this.props.scale);\n\n    d3.select(node).call(axis);\n  };\n\n  render() {\n    return (\n      <g\n        className=\"axis\"\n        ref=\"axisContainer\"\n        transform={this.props.translate}\n      />\n    );\n  }\n}\n\nclass XYAxis extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      padding: PropTypes.number,\n    }),\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {\n      settings: { padding, width, height, mode },\n    } = this.props;\n    return (\n      <g className=\"xy-axis\">\n        <Axis\n          translate={`translate(0, ${padding})`}\n          scale={this.props.xScale}\n          orient=\"top\"\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(${width / 2}, 15)`}\n        >\n          [kCal / person / day]\n        </text>\n        <Axis\n          translate={\n            mode === mode[1]\n              ? `translate(${padding}, 0)`\n              : `translate(${width / 2}, 0)`\n          }\n          scale={this.props.yScale}\n          orient=\"left\"\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={\n            mode === MODE[1]\n              ? `translate(${padding}, ${height - padding + 15})`\n              : `translate(${width / 2}, ${height - padding + 15})`\n          }\n        >\n          [year]\n        </text>\n      </g>\n    );\n  }\n}\n\nclass DataRectangles extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      numDataPoints: PropTypes.number,\n    }),\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  renderRect = coord => {\n    const { settings } = this.props;\n\n    if (settings.mode === MODE[0]) {\n      var dist = settings.width / 2 - this.props.xScale(coord.xDiff);\n      var width = Math.abs(dist);\n      var x = dist > 0 ? this.props.xScale(coord.xDiff) : settings.width / 2;\n    } else if (settings.mode === MODE[1]) {\n      dist = this.props.xScale(coord.xAbs) - this.props.xScale(coord.xLast);\n      width = Math.abs(dist);\n      x =\n        coord.xDiff > 0\n          ? this.props.xScale(coord.xLast)\n          : this.props.xScale(coord.xAbs);\n    }\n\n    return (\n      <rect\n        x={x}\n        y={this.props.yScale(coord.year)}\n        width={width}\n        height={\n          (settings.height - settings.padding * 2) / settings.numDataPoints\n        }\n        className={coord.xDiff > 0 ? 'goodBar' : 'badBar'}\n        key={Math.random() * 1}\n      />\n    );\n  };\n\n  renderRectText = coord => {\n    const { settings } = this.props;\n    if (settings.mode === MODE[0]) {\n      var dist = settings.width / 2 - this.props.xScale(coord.xDiff);\n      var x = settings.width / 2 - dist;\n    } else if (settings.mode === MODE[1]) {\n      dist = this.props.xScale(coord.xAbs) - this.props.xScale(coord.xLast);\n      x = this.props.xScale(coord.xLast) + (coord.xDiff > 0 ? 3 : -3);\n    }\n\n    return (\n      <text\n        textAnchor={coord.xDiff > 0 ? 'start' : 'end'}\n        x={x}\n        y={\n          this.props.yScale(coord.year) +\n          settings.height / settings.numDataPoints / 2 +\n          3\n        }\n        key={Math.random() * 1}\n      >\n        {coord.xDiff > 0 && '+'}\n        {coord.xDiff.toFixed(1)}\n      </text>\n    );\n  };\n\n  render() {\n    return (\n      <g>\n        {this.props.data.map(this.renderRect)}\n        {this.props.data.map(this.renderRectText)}\n      </g>\n    );\n  }\n}\n\nclass WaterfallPlot extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      baseYear: PropTypes.number,\n      numDataPoints: PropTypes.number,\n      maxRange: PropTypes.func,\n    }),\n    data: PropTypes.array.isRequired,\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n  };\n\n  getXScale = () => {\n    const { settings } = this.props;\n\n    if (settings.mode === MODE[0]) {\n      var xMin = d3.min(this.props.data, d => d.xDiff);\n      var xMax = d3.max(this.props.data, d => d.xDiff);\n    } else if (settings.mode === MODE[1]) {\n      xMin = d3.min(this.props.data, d => d.xAbs);\n      xMax = d3.max(this.props.data, d => d.xAbs);\n    }\n\n    const absMax = d3.max([Math.abs(xMin), Math.abs(xMax)]);\n    return d3\n      .scaleLinear()\n      .domain([settings.mode === MODE[0] ? -absMax : xMin, absMax])\n      .range([settings.padding, settings.width - settings.padding]);\n  };\n\n  getYScale = () => {\n    const { settings } = this.props;\n\n    const yMin = d3.min(this.props.data, d => d.year);\n    const yMax = d3.max(this.props.data, d => d.year);\n\n    return d3\n      .scaleLinear()\n      .domain([yMin, yMax + 1])\n      .range([settings.padding, settings.height - settings.padding]);\n  };\n\n  render() {\n    const { settings } = this.props;\n\n    const xScale = this.props.xScale || this.getXScale();\n    const yScale = this.props.xScale || this.getYScale();\n\n    return (\n      <svg width={settings.width} height={settings.height}>\n        <DataRectangles xScale={xScale} yScale={yScale} {...this.props} />\n        <XYAxis xScale={xScale} yScale={yScale} {...this.props} />\n      </svg>\n    );\n  }\n}\n\nclass Waterfall extends Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      baseYear: PropTypes.number,\n      numDataPoints: PropTypes.number,\n      maxRange: PropTypes.func,\n    }),\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n  };\n  static defaultProps = {\n    settings: {\n      width: 300,\n      height: 400,\n      padding: 40,\n      baseYear: 1985,\n      numDataPoints: 30,\n      maxRange: () => Math.random() * 100,\n    },\n  };\n\n  state = {\n    mode: MODE[1],\n    data: [],\n  };\n\n  componentWillMount() {\n    this.processData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) this.processData();\n  }\n\n  toggleMode = () => {\n    const { mode } = this.state;\n    if (mode === MODE[0]) this.setState({ mode: MODE[1] });\n    else if (mode === MODE[1]) this.setState({ mode: MODE[0] });\n  };\n\n  processData = () => {\n    const nextData = this.props.data\n      .map((datum, index, arr) => {\n        if (index !== 0) {\n          return {\n            year: datum[0],\n            xLast: arr[index - 1][1],\n            xDiff: datum[1] - arr[index - 1][1],\n            xAbs: datum[1],\n          };\n        }\n        return null;\n      })\n      .filter(val => !!val);\n    this.setState({ data: nextData });\n  };\n\n  render() {\n    const { settings, country, group } = this.props;\n\n    return (\n      <Card title={`${country} - ${MacroNameMap[group]}`}>\n        <WaterfallPlot\n          data={this.state.data}\n          settings={{\n            ...settings,\n            numDataPoints: this.state.data.length + 1,\n            mode: this.state.mode,\n          }}\n        />\n        <div className=\"controls\">\n          <button className=\"btn randomize\" onClick={this.toggleMode}>\n            Toggle Mode\n          </button>\n          <button className=\"btn randomize\" onClick={this.processData}>\n            Randomize Data\n          </button>\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default Waterfall;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card } from 'antd';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { withInteraction } from '../../../Contexts/InteractionContext/withInteraction';\nimport Selector from '../../../Components/Selector';\nimport MacroNameMap from '../../../Modules/MacroNameMap';\n\nimport './WaterfallConfig.css';\n\nclass WaterfallConfig extends Component {\n  static propTypes = {\n    toggleView: PropTypes.func.isRequired,\n    interaction: PropTypes.shape({\n      fields: PropTypes.shape({\n        availableCountries: PropTypes.arrayOf(PropTypes.string.isRequired)\n          .isRequired,\n      }).isRequired,\n    }).isRequired,\n  };\n\n  render() {\n    const { availableCountries } = this.props.interaction.fields;\n    const { country, group } = this.props;\n\n    const GET_GROUP_OPTIONS = gql`\n      {\n        names(type: MACRO)\n      }\n    `;\n\n    const handleChange = type => value => {\n      this.props.handleChange({ [type]: value });\n    };\n\n    return (\n      <Query query={GET_GROUP_OPTIONS}>\n        {({ loading, error, data }) => {\n          if (error) console.log('Error loading gql data for YearSlider');\n\n          return (\n            <Card title=\"Waterfall Config\" loading={loading}>\n              {!loading && (\n                <div className=\"WaterfallConfig\">\n                  <Selector\n                    placeholder=\"Select a country\"\n                    options={availableCountries}\n                    handleChange={handleChange('country')}\n                    value={country || undefined}\n                  />\n                  <Selector\n                    placeholder=\"Select a group\"\n                    options={data.names.map(name => ({\n                      value: name,\n                      display: MacroNameMap[name],\n                    }))}\n                    handleChange={handleChange('group')}\n                    value={group || undefined}\n                  />\n                  <Button type=\"primary\" onClick={this.props.toggleView}>\n                    Visualize\n                  </Button>\n                </div>\n              )}\n            </Card>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withInteraction(WaterfallConfig);\n","import React, { Component } from 'react';\nimport { withData } from '../../../Contexts/DataContext/withData';\nimport WaterfallViz from '../WaterfallViz';\nimport WaterfallConfig from '../WaterfallConfig';\n\nclass WaterfallContainer extends Component {\n  state = {\n    displayConfig: true,\n    country: null,\n    group: null,\n    data: [],\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data.data !== this.props.data.data) this.filterData();\n  }\n\n  toggleView = () => {\n    this.setState(state => ({ displayConfig: !state.displayConfig }));\n  };\n\n  handleChange = async diff => {\n    await this.setState({ ...diff });\n    this.filterData();\n  };\n\n  filterData = () => {\n    const { country, group } = this.state;\n    let nextData = [];\n    if (!!country && !!group) {\n      nextData = this.props.data.data.map(d => [\n        d.year,\n        d.countries\n          .filter(c => c.country === country)[0]\n          .items.filter(item => item.name === group)[0].value,\n      ]);\n    }\n    this.setState({ data: nextData });\n  };\n\n  render() {\n    const { data, ...config } = this.state;\n    return (\n      <div>\n        {this.state.displayConfig ? (\n          <WaterfallConfig\n            handleChange={this.handleChange}\n            toggleView={this.toggleView}\n            {...config}\n          />\n        ) : (\n          <WaterfallViz\n            {...this.props}\n            {...config}\n            toggleView={this.toggleView}\n            data={data}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nWaterfallContainer.propTypes = {};\n\nexport default withData(WaterfallContainer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { withData } from '../../Contexts/DataContext/withData';\nimport { withInteraction } from '../../Contexts/InteractionContext/withInteraction';\nimport { Slider, Typography } from 'antd';\n\nconst { Text } = Typography;\n\nclass MySlider extends Component {\n  constructor(props) {\n    super(props);\n    const { min, max } = this.props;\n    this.handleRelease([min, max]);\n  }\n\n  static propTypes = {\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    interaction: PropTypes.shape({\n      setFields: PropTypes.func.isRequired,\n    }).isRequired,\n    data: PropTypes.shape({\n      setQuery: PropTypes.func.isRequired,\n    }).isRequired,\n  };\n\n  handleRelease = value => {\n    // Create array of all years from base year to top year\n    const selectedYears = [...Array(value[1] - value[0] + 1).keys()].map(\n      v => value[0] + v\n    );\n    this.props.data.setQuery({\n      years: selectedYears,\n    });\n    this.props.interaction.setFields({\n      availableYears: selectedYears,\n    });\n  };\n\n  render() {\n    const { min, max } = this.props;\n\n    return (\n      <div>\n        <Text>Year</Text>\n        <Slider\n          range\n          defaultValue={[min, max]}\n          min={min}\n          max={max}\n          onAfterChange={this.handleRelease}\n        />\n      </div>\n    );\n  }\n}\n\nclass YearSlider extends Component {\n  render() {\n    const GET_YEAR_RANGE = gql`\n      {\n        yearRange {\n          min\n          max\n        }\n      }\n    `;\n\n    return (\n      <Query query={GET_YEAR_RANGE}>\n        {({ loading, error, data }) => {\n          if (loading) return 'Loading...';\n          if (error) console.log('Error loading gql data for YearSlider');\n          const { min, max } = data.yearRange;\n\n          return <MySlider {...this.props} min={min} max={max} />;\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withInteraction(withData(YearSlider));\n","import React, { Component } from 'react';\nimport {\n  CountryPicker,\n  YearSlider,\n  LineChart,\n  Waterfall,\n  ScatterPlot,\n} from '../../Visualizations';\nimport { Layout, Card } from 'antd';\n\nimport './VisualizationContainer.css';\n\nconst { Sider, Content } = Layout;\n\nclass VisualizationContainer extends Component {\n  state = {\n    waterfalls: [],\n  };\n\n  render() {\n    return (\n      <Layout style={{ height: '100vh' }}>\n        <Sider theme=\"light\" className=\"sideBar\">\n          <h1 className=\"App-title\">Nutrition InfoViz</h1>\n          <CountryPicker />\n          <br />\n          <YearSlider />\n        </Sider>\n        <Content className=\"dashboard\">\n          <ScatterPlot />\n          <LineChart />\n          {this.state.waterfalls}\n          <Card\n            onClick={() =>\n              this.setState({\n                waterfalls: [...this.state.waterfalls, <Waterfall />],\n              })\n            }\n            style={{ width: 375 }}\n          >\n            Click to add Waterfall\n          </Card>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\n// Receives no props\nVisualizationContainer.propTypes = {};\n\nexport default VisualizationContainer;\n","import * as React from 'react';\nimport { DataContext } from './data-context';\nimport ApolloClient from 'apollo-boost';\nimport gql from 'graphql-tag';\nimport { ApolloProvider } from 'react-apollo';\n\nexport default class DataProvider extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      setDate: this.setData,\n      setQuery: this.setQuery,\n      data: [],\n      queryParams: {\n        type: 'MACRO',\n        countries: [],\n        years: [],\n      },\n      loading: true,\n    };\n    this.client = new ApolloClient({\n      uri: 'http://localhost:4000/graphql',\n      // uri: 'http://gql.healthviz.xyz/graphql',\n    });\n    this.getData();\n  }\n\n  setQuery = async nextQuery => {\n    await this.setState(state => ({\n      queryParams: {\n        ...state.queryParams,\n        ...nextQuery,\n      },\n    }));\n    this.getData();\n  };\n\n  setData = nextData => {\n    // save data to state\n    this.setState({ data: nextData, loading: false });\n    console.log('setData', nextData);\n  };\n\n  getData = () => {\n    const { years, countries, type } = this.state.queryParams;\n    console.log(this.state.queryParams);\n    this.setState({ loading: true });\n    this.client\n      .query({\n        query: gql`\n          {\n            itemByYearCountry(\n              ${years.length > 0 ? `years:${JSON.stringify(years)}, ` : ''}\n              ${\n                countries.length > 0\n                  ? `countries:${JSON.stringify(countries)}, `\n                  : ''\n              }\n              ${!!type ? `type:${type}` : ''}\n            )\n              {\n              year\n              countries {\n                country\n                items {\n                  country\n                  year\n                  type\n                  name\n                  value\n                }\n              }\n            }\n          }\n        `,\n      })\n      .then(result => this.setData(result.data.itemByYearCountry))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <DataContext.Provider value={this.state}>\n        <ApolloProvider client={this.client}>\n          {this.props.children}\n        </ApolloProvider>\n      </DataContext.Provider>\n    );\n  }\n}\n","import * as React from 'react';\nimport { InteractionContext } from './interaction-context';\n\nexport default class InteractionProvider extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      setFields: this.setFields,\n      fields: {\n        availableYears: [],\n        availableCountries: [],\n        selectedYear: null,\n        selectedCountry: null,\n        hoveredYear: null,\n        hoveredCountry: null,\n      },\n    };\n  }\n\n  setFields = nextFieldsDiff => {\n    // save Interaction to state\n    this.setState(state => ({\n      fields: { ...state.fields, ...nextFieldsDiff },\n    }));\n  };\n\n  render() {\n    return (\n      <InteractionContext.Provider value={this.state}>\n        {this.props.children}\n      </InteractionContext.Provider>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport VisualizationContainer from '../Components/VisualizationContainer';\nimport DataProvider from '../Contexts/DataContext/DataProvider';\nimport InteractionProvider from '../Contexts/InteractionContext/InteractionProvider';\n\nclass App extends Component {\n  render() {\n    return (\n      <DataProvider>\n        <InteractionProvider>\n          <div className=\"App\">\n            <VisualizationContainer />\n          </div>\n        </InteractionProvider>\n      </DataProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}