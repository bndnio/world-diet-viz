{"version":3,"sources":["Contexts/DataContext/data-context.js","Contexts/DataContext/withData.jsx","Contexts/InteractionContext/interaction-context.js","Contexts/InteractionContext/withInteraction.jsx","Visualizations/CountryPicker/CountryPicker.jsx","Components/Selector/Selector.jsx","Modules/MacroNameMap.js","Visualizations/LineChart/LineChart.jsx","Visualizations/ScatterPlot/ScatterPlot.jsx","Visualizations/Waterfall/WaterfallViz/Waterfall.jsx","Visualizations/Waterfall/WaterfallConfig/WaterfallConfig.jsx","Visualizations/Waterfall/WaterfallContainer/WaterfallContainer.jsx","Visualizations/YearSlider/YearSlider.jsx","Components/PresetButton/PresetButton.jsx","Components/VisualizationContainer/VisualizationContainer.jsx","Contexts/DataContext/DataProvider.jsx","Contexts/InteractionContext/InteractionProvider.jsx","App/App.jsx","serviceWorker.js","index.js"],"names":["DataContext","React","withData","Component","props","react","Consumer","dataProps","Object","assign","data","InteractionContext","withInteraction","interactionProps","interaction","Text","Option","es_select","handleChange","value","_this","setQuery","countries","setFields","availableCountries","_this2","this","GET_COUNTRIES","gql","_templateObject","react_default","a","createElement","react_apollo_esm","query","_ref","loading","error","console","log","mode","style","width","placeholder","defaultValue","onChange","fields","map","country","key","Selector","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","options","index","Selector_Option","display","MacroNameMap","Grand Total - Animal Protein - Food supply","Grand Total - Carbs - Food supply","Grand Total - Fat - Food supply","Grand Total - Food supply","Grand Total - Plant Protein - Food supply","Grand Total - Protein - Food supply","settings","height","padding","XAxis","renderXAxis","node","refs","axisContainer","axis","d3","ticks","tickFormat","scale","call","className","ref","transform","translate","YAxis","renderYAxis","flip","XYAxis","LineChart_XAxis","concat","xScale","textAnchor","LineChart_YAxis","yScale","otherYScale","Line","coords","x1","y1","x2","y2","strokeWidth","stroke","color","renderLine","bind","FilledSeries","_this$props","Fragment","LineChart_FillBottom","LineChart_Line","Color","darken","FillBottom","points","fill","renderFillBottom","LineGraph","availableYears","minYear","maxYear","length","domain","range","kcalMax","getXScale","yDataScale","getDataYScale","yDeathDataScale","getDeathYScale","LineChart_FilledSeries","measure4","measure3","measure2","measure1","deathData","LineChart_XYAxis","processData","prevProps","selectedCountry","nextData","d","year","filter","c","items","reduce","acc","item","objectSpread","defineProperty","name","setState","totalData","yr","i","arr","Math","random","carbData","fatData","animalProteinData","plantProteinData","GET_YEAR_RANGE","LineChart_templateObject","card","title","Components_Selector_Selector","disabled","max","kcalRange","LineChart_LineGraph","state","Axis","renderAxis","orient","ScatterPlot_Axis","DataCircles","renderCircle","cx","cy","r","ScatterPlot","_this3","xMax","getYScale","yMax","ScatterPlot_DataCircles","ScatterPlot_XYAxis","ScatterPlotViz","randomizeData","_this4","randomData","numDataPoints","floor","maxRange","ScatterPlot_ScatterPlot_ScatterPlot","onClick","defaultProps","MODE","_this$props$settings","Waterfall_Axis","DataRectangles","renderRect","coord","dist","xDiff","abs","x","xAbs","xLast","y","renderRectText","toFixed","WaterfallPlot","xMin","absMax","yMin","Waterfall_DataRectangles","Waterfall_XYAxis","Waterfall","toggleMode","datum","val","group","Waterfall_WaterfallPlot","baseYear","GET_GROUP_OPTIONS","WaterfallConfig_templateObject","type","undefined","names","es_button","toggleView","displayConfig","_callee","diff","regenerator_default","wrap","_context","prev","next","filterData","stop","_this$state","_this$state2","config","objectWithoutProperties","Waterfall_WaterfallConfig_WaterfallConfig","Waterfall_WaterfallViz_Waterfall","MySlider","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleRelease","selectedYears","toConsumableArray","Array","keys","v","years","min","_this$props2","YearSlider_Text","slider","onAfterChange","YearSlider_templateObject","_data$yearRange","yearRange","YearSlider_MySlider","handleClick","selectedYear","queryParams","Sider","Content","VisualizationContainer","waterfalls","layout","theme","Visualizations_CountryPicker_CountryPicker","Visualizations_YearSlider_YearSlider","Components_PresetButton_PresetButton","Visualizations_ScatterPlot_ScatterPlot","Visualizations_LineChart_LineChart","Waterfall_WaterfallContainer_WaterfallContainer","DataProvider","asyncToGenerator","mark","nextQuery","getData","_x","apply","arguments","setData","_this$state$queryPara","client","DataProvider_templateObject","JSON","stringify","then","result","itemByYearCountry","catch","err","setDate","ApolloClient","uri","Provider","InteractionProvider","nextFieldsDiff","hoveredYear","hoveredCountry","App","DataProvider_DataProvider","InteractionProvider_InteractionProvider","Components_VisualizationContainer_VisualizationContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c7384c30.chunk.js","sourcesContent":["import * as React from 'react';\n\nexport const DataContext = React.createContext();\n","import * as React from 'react';\nimport { DataContext } from './data-context';\n\nexport function withData(Component) {\n  return function DataComponent(props) {\n    return (\n      <DataContext.Consumer>\n        {dataProps => <Component {...props} data={dataProps} />}\n      </DataContext.Consumer>\n    );\n  };\n}\n","import * as React from 'react';\n\nexport const InteractionContext = React.createContext();\n","import * as React from 'react';\nimport { InteractionContext } from './interaction-context';\n\nexport function withInteraction(Component) {\n  return function InteractionComponent(props) {\n    return (\n      <InteractionContext.Consumer>\n        {interactionProps => (\n          <Component {...props} interaction={interactionProps} />\n        )}\n      </InteractionContext.Consumer>\n    );\n  };\n}\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { withData } from '../../Contexts/DataContext/withData';\nimport { withInteraction } from '../../Contexts/InteractionContext/withInteraction';\nimport { Select, Typography } from 'antd';\n\nconst { Text } = Typography;\n\nconst Option = Select.Option;\n\nclass CountryPicker extends Component {\n  handleChange = value => {\n    this.props.data.setQuery({ countries: value || [] });\n    this.props.interaction.setFields({ availableCountries: value || [] });\n  };\n\n  render() {\n    const GET_COUNTRIES = gql`\n      {\n        countries\n      }\n    `;\n\n    return (\n      <Query query={GET_COUNTRIES}>\n        {({ loading, error, data }) => {\n          if (loading) return 'Loading...';\n          if (error) console.log('Error loading gql data for CountryPicker');\n          const { countries } = data;\n\n          return (\n            <div>\n              <Text>Country</Text>\n              <Select\n                mode=\"multiple\"\n                style={{ width: '100%' }}\n                placeholder=\"Please select\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n                value={this.props.interaction.fields.availableCountries}\n              >\n                {countries.map(country => (\n                  <Option key={country}>{country}</Option>\n                ))}\n              </Select>\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withInteraction(withData(CountryPicker));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from 'antd';\n\nconst Option = Select.Option;\n\nconst Selector = props => {\n  function handleChange(value) {\n    props.handleChange(value);\n  }\n\n  return (\n    <Select\n      {...props}\n      showSearch\n      style={{ width: 200 }}\n      placeholder={props.placeholder || 'Select one'}\n      optionFilterProp=\"children\"\n      onChange={handleChange}\n      filterOption={(input, option) =>\n        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {props.options.map((option, index) => (\n        <Option key={option.value || index} value={option.value || option}>\n          {option.display || option}\n        </Option>\n      ))}\n    </Select>\n  );\n};\n\nSelector.propTypes = {\n  placeholder: PropTypes.string,\n  handleChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.shape({\n        value: PropTypes.string.isRequired,\n        display: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n          .isRequired,\n      }),\n    ]).isRequired\n  ).isRequired,\n};\n\nexport default Selector;\n","export default {\n  'Grand Total - Animal Protein - Food supply': 'Animal Protein',\n  'Grand Total - Carbs - Food supply': 'Carbs',\n  'Grand Total - Fat - Food supply': 'Fat',\n  'Grand Total - Food supply': 'Grand Total',\n  'Grand Total - Plant Protein - Food supply': 'Plant Protein',\n  'Grand Total - Protein - Food supply': 'Protein',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport * as d3 from 'd3';\nimport Color from 'color';\nimport { Card } from 'antd';\nimport Selector from '../../Components/Selector';\nimport MacroNameMap from '../../Modules/MacroNameMap';\nimport { withData } from '../../Contexts/DataContext/withData';\nimport { withInteraction } from '../../Contexts/InteractionContext/withInteraction';\n\nimport './LineChart.css';\n\nconst settings = {\n  width: 900,\n  height: 300,\n  padding: 50,\n};\n\nclass XAxis extends React.Component {\n  static propTypes = {\n    translate: PropTypes.string.isRequired,\n    scale: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.renderXAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderXAxis();\n  }\n\n  renderXAxis() {\n    const node = this.refs.axisContainer;\n    const baseAxis = d3\n      .axisBottom()\n      .ticks(5)\n      .tickFormat(d3.format('d'));\n    const axis = baseAxis.scale(this.props.scale);\n    d3.select(node).call(axis);\n  }\n\n  render() {\n    return (\n      <g\n        className=\"axis\"\n        ref=\"axisContainer\"\n        transform={this.props.translate}\n      />\n    );\n  }\n}\n\nclass YAxis extends React.Component {\n  static propTypes = {\n    translate: PropTypes.string.isRequired,\n    scale: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.renderYAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderYAxis();\n  }\n\n  renderYAxis() {\n    const node = this.refs.axisContainer;\n    let baseAxis;\n    if (this.props.flip) baseAxis = d3.axisRight();\n    else baseAxis = d3.axisLeft();\n    const axis = baseAxis.ticks(5).scale(this.props.scale);\n    d3.select(node).call(axis);\n  }\n\n  render() {\n    return (\n      <g\n        className=\"axis\"\n        ref=\"axisContainer\"\n        transform={this.props.translate}\n      />\n    );\n  }\n}\n\nclass XYAxis extends React.Component {\n  static propTypes = {\n    padding: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <g className=\"LE-xy-axis\">\n        <XAxis\n          translate={`translate(0, ${this.props.height - this.props.padding})`}\n          scale={this.props.xScale}\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(${settings.width / 2 -\n            this.props.padding / 2}, ${settings.height - 5})`}\n        >\n          [year]\n        </text>\n        <YAxis\n          translate={`translate(${this.props.padding}, 0)`}\n          scale={this.props.yScale}\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(10, ${settings.height / 2}), rotate(-90)`}\n        >\n          [total kCal]\n        </text>\n        <YAxis\n          translate={`translate(${settings.width - this.props.padding * 2}, 0)`}\n          scale={this.props.otherYScale}\n          flip\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(${settings.width - 10}, ${settings.height /\n            2}), rotate(-90)`}\n        >\n          [Mean Age of Death]\n        </text>\n      </g>\n    );\n  }\n}\n\nclass Line extends React.Component {\n  static propTypes = {\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  renderLine(coords) {\n    return (\n      <line\n        x1={this.props.xScale(coords[0])}\n        y1={this.props.yScale(coords[1])}\n        x2={this.props.xScale(coords[2])}\n        y2={this.props.yScale(coords[3])}\n        strokeWidth={1.5}\n        stroke={this.props.color}\n      />\n    );\n  }\n\n  render() {\n    return <g>{this.props.data.map(this.renderLine.bind(this))}</g>;\n  }\n}\n\n// To be used later with interaction\n// class DataCircles extends React.Component {\n//   static propTypes = {\n//     xScale: PropTypes.func.isRequired,\n//     yScale: PropTypes.func.isRequired,\n//   };\n\n//   renderCircle(coords) {\n//     return (\n//       <circle\n//         cx={this.props.xScale(coords[2])}\n//         cy={this.props.yScale(coords[3])}\n//         r={3}\n//         key={Math.random()}\n//         fill={this.props.color}\n//       />\n//     );\n//   }\n\n//   render() {\n//     return <g>{this.props.data.map(this.renderCircle.bind(this))}</g>;\n//   }\n// }\n\nclass FilledSeries extends Component {\n  static propTypes = {\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n    data: PropTypes.array.isRequired,\n    color: PropTypes.string.isRequired,\n  };\n\n  render() {\n    const { xScale, yScale, data, color } = this.props;\n    return (\n      <React.Fragment>\n        <FillBottom xScale={xScale} yScale={yScale} data={data} color={color} />\n        <Line\n          xScale={xScale}\n          yScale={yScale}\n          data={data}\n          color={Color(color).darken(0.1)}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nclass FillBottom extends React.Component {\n  static propTypes = {\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  renderFillBottom(coords) {\n    return (\n      <polygon\n        points={`\n        ${this.props.xScale(coords[0])},${this.props.yScale(0)}\n        ${this.props.xScale(coords[2])},${this.props.yScale(0)}\n        ${this.props.xScale(coords[2])},${this.props.yScale(coords[3])}\n        ${this.props.xScale(coords[0])},${this.props.yScale(coords[1])}\n        `}\n        fill={this.props.color}\n      />\n    );\n  }\n\n  render() {\n    return <g>{this.props.data.map(this.renderFillBottom.bind(this))}</g>;\n  }\n}\n\nclass LineGraph extends React.Component {\n  static propTypes = {\n    padding: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    data: PropTypes.array.isRequired,\n    kcalMax: PropTypes.array.isRequired,\n  };\n\n  getXScale() {\n    const { availableYears } = this.props.interaction.fields;\n    const minYear = availableYears[0];\n    const maxYear = availableYears[availableYears.length - 1];\n\n    return d3\n      .scaleLinear()\n      .domain([minYear, maxYear])\n      .range([this.props.padding, this.props.width - this.props.padding * 2]);\n  }\n\n  getDataYScale() {\n    return d3\n      .scaleLinear()\n      .domain([0, this.props.kcalMax])\n      .range([this.props.height - this.props.padding, this.props.padding]);\n  }\n  getDeathYScale() {\n    return d3\n      .scaleLinear()\n      .domain([20, 80])\n      .range([this.props.height - this.props.padding, this.props.padding]);\n  }\n\n  render() {\n    const xScale = this.getXScale();\n    const yDataScale = this.getDataYScale();\n    const yDeathDataScale = this.getDeathYScale();\n\n    return (\n      <svg width={this.props.width} height={this.props.height}>\n        <FilledSeries\n          xScale={xScale}\n          yScale={yDataScale}\n          data={this.props.measure4}\n          color=\"#70b678\"\n        />\n        <FilledSeries\n          xScale={xScale}\n          yScale={yDataScale}\n          data={this.props.measure3}\n          color=\"#bbdbad\"\n        />\n        <FilledSeries\n          xScale={xScale}\n          yScale={yDataScale}\n          data={this.props.measure2}\n          color=\"#c79fc8\"\n        />\n        <FilledSeries\n          xScale={xScale}\n          yScale={yDataScale}\n          data={this.props.measure1}\n          color=\"#f4a58a\"\n        />\n        <Line\n          xScale={xScale}\n          yScale={yDeathDataScale}\n          {...this.props}\n          data={this.props.deathData}\n          color=\"#444444\"\n        />\n        <XYAxis\n          xScale={xScale}\n          yScale={yDataScale}\n          otherYScale={yDeathDataScale}\n          {...this.props}\n        />\n      </svg>\n    );\n  }\n}\n\nclass LineChart extends React.Component {\n  componentWillMount() {\n    this.processData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.data.data !== this.props.data.data ||\n      prevProps.interaction.fields.selectedCountry !==\n        this.props.interaction.fields.selectedCountry\n    ) {\n      this.processData();\n    }\n  }\n\n  processData() {\n    // each datapoint in form of [year, totalKCal, measure1, measure2, measure3]\n    console.log('processing');\n    const { selectedCountry } = this.props.interaction.fields;\n    let nextData = [];\n    if (!!selectedCountry) {\n      nextData = this.props.data.data.map(d => [\n        d.year,\n        d.countries\n          .filter(c => c.country === selectedCountry)[0]\n          .items.reduce(\n            (acc, item) => ({\n              ...acc,\n              [MacroNameMap[item.name]]: item.value,\n            }),\n            {}\n          ),\n      ]);\n    }\n\n    this.setState({\n      data: nextData,\n      // x1, y1, x2, y2\n      totalData: nextData\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else\n            return [\n              yr[0],\n              yr[1]['Grand Total'],\n              arr[i - 1][0],\n              arr[i - 1][1]['Grand Total'],\n            ];\n        })\n        .filter(d => !!d),\n      deathData: nextData\n        .map(d => [d[0], 65 + (Math.random() - 0.5) * 10])\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else return [yr[0], yr[1], arr[i - 1][0], arr[i - 1][1]];\n        })\n        .filter(d => !!d),\n      carbData: nextData\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else\n            return [\n              yr[0],\n              yr[1]['Carbs'],\n              arr[i - 1][0],\n              arr[i - 1][1]['Carbs'],\n            ];\n        })\n        .filter(d => !!d),\n      fatData: nextData\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else\n            return [\n              yr[0],\n              yr[1]['Carbs'] + yr[1]['Fat'],\n              arr[i - 1][0],\n              arr[i - 1][1]['Carbs'] + arr[i - 1][1]['Fat'],\n            ];\n        })\n        .filter(d => !!d),\n      animalProteinData: nextData\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else\n            return [\n              yr[0],\n              yr[1]['Carbs'] + yr[1]['Fat'] + yr[1]['Animal Protein'],\n              arr[i - 1][0],\n              arr[i - 1][1]['Carbs'] +\n                arr[i - 1][1]['Fat'] +\n                arr[i - 1][1]['Animal Protein'],\n            ];\n        })\n        .filter(d => !!d),\n      plantProteinData: nextData\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else\n            return [\n              yr[0],\n              yr[1]['Carbs'] +\n                yr[1]['Fat'] +\n                yr[1]['Animal Protein'] +\n                yr[1]['Plant Protein'],\n              arr[i - 1][0],\n              arr[i - 1][1]['Carbs'] +\n                arr[i - 1][1]['Fat'] +\n                arr[i - 1][1]['Animal Protein'] +\n                arr[i - 1][1]['Plant Protein'],\n            ];\n        })\n        .filter(d => !!d),\n    });\n  }\n\n  render() {\n    const GET_YEAR_RANGE = gql`\n      {\n        kcalRange {\n          max\n        }\n      }\n    `;\n\n    return (\n      <Card\n        title={\n          <div>\n            <span>\"Life Expectancy v. Total kCal Consumption\"</span>\n            <Selector\n              options={this.props.interaction.fields.availableCountries || []}\n              handleChange={value =>\n                this.props.interaction.setFields({\n                  selectedCountry: value,\n                })\n              }\n              disabled={\n                this.props.data.loading ||\n                !this.props.interaction.fields.availableCountries\n              }\n            />\n          </div>\n        }\n      >\n        <Query query={GET_YEAR_RANGE}>\n          {({ loading, error, data }) => {\n            if (this.props.data.loading || loading) return 'Loading...';\n            if (error) console.log('Error loading gql data for LineChart');\n            const { max } = data.kcalRange;\n\n            if (!this.props.interaction.fields.selectedCountry)\n              return 'select a country';\n            return (\n              <LineGraph\n                {...this.props}\n                data={this.state.totalData}\n                deathData={this.state.deathData}\n                measure1={this.state.carbData}\n                measure2={this.state.fatData}\n                measure3={this.state.animalProteinData}\n                measure4={this.state.plantProteinData}\n                kcalMax={max}\n                {...settings}\n              />\n            );\n          }}\n        </Query>\n      </Card>\n    );\n  }\n}\n\nexport default withInteraction(withData(LineChart));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport { Card } from 'antd';\nimport { withData } from '../../Contexts/DataContext/withData';\n\nimport './ScatterPlot.css';\n\nclass Axis extends React.Component {\n  static propTypes = {\n    translate: PropTypes.string.isRequired,\n    orient: PropTypes.oneOf(['bottom', 'top', 'left']).isRequired,\n    scale: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const node = this.refs.axisContainer;\n    const baseAxis =\n      this.props.orient === 'bottom'\n        ? d3.axisBottom()\n        : this.props.orient === 'left'\n        ? d3.axisLeft()\n        : null;\n    const axis = baseAxis.ticks(5).scale(this.props.scale);\n\n    d3.select(node).call(axis);\n  };\n\n  render() {\n    return (\n      <g\n        className=\"axis\"\n        ref=\"axisContainer\"\n        transform={this.props.translate}\n      />\n    );\n  }\n}\n\nclass XYAxis extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      padding: PropTypes.number,\n    }),\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { settings } = this.props;\n\n    return (\n      <g className=\"xy-axis\">\n        <Axis\n          translate={`translate(0, ${settings.height - settings.padding})`}\n          scale={this.props.xScale}\n          orient=\"bottom\"\n        />\n        <Axis\n          translate={`translate(${settings.padding}, 0)`}\n          scale={this.props.yScale}\n          orient=\"left\"\n        />\n      </g>\n    );\n  }\n}\n\nclass DataCircles extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      numDataPoints: PropTypes.number,\n    }),\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  renderCircle = coords => {\n    return (\n      <circle\n        cx={this.props.xScale(coords[0])}\n        cy={this.props.yScale(coords[1])}\n        r={2}\n        key={Math.random() * 1}\n      />\n    );\n  };\n\n  render() {\n    return <g>{this.props.data.map(this.renderCircle)}</g>;\n  }\n}\n\nclass ScatterPlot extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      numDataPoints: PropTypes.number,\n      maxRange: PropTypes.func,\n    }),\n    data: PropTypes.array.isRequired,\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n  };\n\n  getXScale = () => {\n    const { settings } = this.props;\n\n    const xMax = d3.max(this.props.data, d => d[0]);\n\n    return d3\n      .scaleLinear()\n      .domain([0, xMax])\n      .range([settings.padding, settings.width - settings.padding * 2]);\n  };\n\n  getYScale = () => {\n    const { settings } = this.props;\n\n    const yMax = d3.max(this.props.data, d => d[1]);\n\n    return d3\n      .scaleLinear()\n      .domain([0, yMax])\n      .range([settings.height - settings.padding, settings.padding]);\n  };\n\n  render() {\n    const { settings } = this.props;\n\n    const xScale = settings.xScale || this.getXScale();\n    const yScale = settings.yScale || this.getYScale();\n\n    return (\n      <svg width={settings.width} height={settings.height}>\n        <DataCircles xScale={xScale} yScale={yScale} {...this.props} />\n        <XYAxis xScale={xScale} yScale={yScale} {...this.props} />\n      </svg>\n    );\n  }\n}\n\nclass ScatterPlotViz extends Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      numDataPoints: PropTypes.number,\n      maxRange: PropTypes.func,\n    }),\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n  };\n  static defaultProps = {\n    settings: {\n      width: 350,\n      height: 350,\n      padding: 30,\n      numDataPoints: 50,\n      maxRange: () => Math.random() * 1000,\n    },\n  };\n\n  componentWillMount() {\n    this.randomizeData();\n  }\n\n  randomizeData = () => {\n    const { settings } = this.props;\n\n    const randomData = d3.range(settings.numDataPoints).map(() => {\n      return [\n        Math.floor(Math.random() * settings.maxRange()),\n        Math.floor(Math.random() * settings.maxRange()),\n      ];\n    });\n    this.setState({ data: randomData });\n  };\n\n  render() {\n    const { settings } = this.props;\n\n    return (\n      <Card title=\"Sample Scatterplot\">\n        <ScatterPlot data={this.state.data} settings={settings} />\n        <div className=\"controls\">\n          <button className=\"btn randomize\" onClick={this.randomizeData}>\n            Randomize Data\n          </button>\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default withData(ScatterPlotViz);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport { Card } from 'antd';\nimport MacroNameMap from '../../../Modules/MacroNameMap';\n\nimport './Waterfall.css';\n\nconst MODE = ['ALIGN', 'FOLLOW'];\n\nclass Axis extends React.Component {\n  static propTypes = {\n    translate: PropTypes.string.isRequired,\n    orient: PropTypes.oneOf(['bottom', 'top', 'left']).isRequired,\n    scale: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const node = this.refs.axisContainer;\n    const baseAxis =\n      this.props.orient === 'bottom'\n        ? d3.axisBottom()\n        : this.props.orient === 'top'\n        ? d3.axisTop()\n        : this.props.orient === 'left'\n        ? d3.axisLeft()\n        : null;\n    const axis = baseAxis.ticks(5).scale(this.props.scale);\n\n    d3.select(node).call(axis);\n  };\n\n  render() {\n    return (\n      <g\n        className=\"axis\"\n        ref=\"axisContainer\"\n        transform={this.props.translate}\n      />\n    );\n  }\n}\n\nclass XYAxis extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      padding: PropTypes.number,\n    }),\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {\n      settings: { padding, width, height, mode },\n    } = this.props;\n    return (\n      <g className=\"xy-axis\">\n        <Axis\n          translate={`translate(0, ${padding})`}\n          scale={this.props.xScale}\n          orient=\"top\"\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(${width / 2}, 15)`}\n        >\n          [kCal / person / day]\n        </text>\n        <Axis\n          translate={\n            mode === mode[1]\n              ? `translate(${padding}, 0)`\n              : `translate(${width / 2}, 0)`\n          }\n          scale={this.props.yScale}\n          orient=\"left\"\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={\n            mode === MODE[1]\n              ? `translate(${padding}, ${height - padding + 15})`\n              : `translate(${width / 2}, ${height - padding + 15})`\n          }\n        >\n          [year]\n        </text>\n      </g>\n    );\n  }\n}\n\nclass DataRectangles extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      numDataPoints: PropTypes.number,\n    }),\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  renderRect = coord => {\n    const { settings } = this.props;\n\n    if (settings.mode === MODE[0]) {\n      var dist = settings.width / 2 - this.props.xScale(coord.xDiff);\n      var width = Math.abs(dist);\n      var x = dist > 0 ? this.props.xScale(coord.xDiff) : settings.width / 2;\n    } else if (settings.mode === MODE[1]) {\n      dist = this.props.xScale(coord.xAbs) - this.props.xScale(coord.xLast);\n      width = Math.abs(dist);\n      x =\n        coord.xDiff > 0\n          ? this.props.xScale(coord.xLast)\n          : this.props.xScale(coord.xAbs);\n    }\n\n    return (\n      <rect\n        x={x}\n        y={this.props.yScale(coord.year)}\n        width={width}\n        height={\n          (settings.height - settings.padding * 2) / settings.numDataPoints\n        }\n        className={coord.xDiff > 0 ? 'goodBar' : 'badBar'}\n        key={Math.random() * 1}\n      />\n    );\n  };\n\n  renderRectText = coord => {\n    const { settings } = this.props;\n    if (settings.mode === MODE[0]) {\n      var dist = settings.width / 2 - this.props.xScale(coord.xDiff);\n      var x = settings.width / 2 - dist;\n    } else if (settings.mode === MODE[1]) {\n      dist = this.props.xScale(coord.xAbs) - this.props.xScale(coord.xLast);\n      x = this.props.xScale(coord.xLast) + (coord.xDiff > 0 ? 3 : -3);\n    }\n\n    return (\n      <text\n        textAnchor={coord.xDiff > 0 ? 'start' : 'end'}\n        x={x}\n        y={\n          this.props.yScale(coord.year) +\n          settings.height / settings.numDataPoints / 2 +\n          3\n        }\n        key={Math.random() * 1}\n      >\n        {coord.xDiff > 0 && '+'}\n        {coord.xDiff.toFixed(1)}\n      </text>\n    );\n  };\n\n  render() {\n    return (\n      <g>\n        {this.props.data.map(this.renderRect)}\n        {this.props.data.map(this.renderRectText)}\n      </g>\n    );\n  }\n}\n\nclass WaterfallPlot extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      baseYear: PropTypes.number,\n      numDataPoints: PropTypes.number,\n      maxRange: PropTypes.func,\n    }),\n    data: PropTypes.array.isRequired,\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n  };\n\n  getXScale = () => {\n    const { settings } = this.props;\n\n    if (settings.mode === MODE[0]) {\n      var xMin = d3.min(this.props.data, d => d.xDiff);\n      var xMax = d3.max(this.props.data, d => d.xDiff);\n    } else if (settings.mode === MODE[1]) {\n      xMin = d3.min(this.props.data, d => d.xAbs);\n      xMax = d3.max(this.props.data, d => d.xAbs);\n    }\n\n    const absMax = d3.max([Math.abs(xMin), Math.abs(xMax)]);\n    return d3\n      .scaleLinear()\n      .domain([settings.mode === MODE[0] ? -absMax : xMin, absMax])\n      .range([settings.padding, settings.width - settings.padding]);\n  };\n\n  getYScale = () => {\n    const { settings } = this.props;\n\n    const yMin = d3.min(this.props.data, d => d.year);\n    const yMax = d3.max(this.props.data, d => d.year);\n\n    return d3\n      .scaleLinear()\n      .domain([yMin, yMax + 1])\n      .range([settings.padding, settings.height - settings.padding]);\n  };\n\n  render() {\n    const { settings } = this.props;\n\n    const xScale = this.props.xScale || this.getXScale();\n    const yScale = this.props.xScale || this.getYScale();\n\n    return (\n      <svg width={settings.width} height={settings.height}>\n        <DataRectangles xScale={xScale} yScale={yScale} {...this.props} />\n        <XYAxis xScale={xScale} yScale={yScale} {...this.props} />\n      </svg>\n    );\n  }\n}\n\nclass Waterfall extends Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      baseYear: PropTypes.number,\n      numDataPoints: PropTypes.number,\n      maxRange: PropTypes.func,\n    }),\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n  };\n  static defaultProps = {\n    settings: {\n      width: 300,\n      height: 400,\n      padding: 40,\n      baseYear: 1985,\n      numDataPoints: 30,\n      maxRange: () => Math.random() * 100,\n    },\n  };\n\n  state = {\n    mode: MODE[1],\n    data: [],\n  };\n\n  componentWillMount() {\n    this.processData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) this.processData();\n  }\n\n  toggleMode = () => {\n    const { mode } = this.state;\n    if (mode === MODE[0]) this.setState({ mode: MODE[1] });\n    else if (mode === MODE[1]) this.setState({ mode: MODE[0] });\n  };\n\n  processData = () => {\n    const nextData = this.props.data\n      .map((datum, index, arr) => {\n        if (index !== 0) {\n          return {\n            year: datum[0],\n            xLast: arr[index - 1][1],\n            xDiff: datum[1] - arr[index - 1][1],\n            xAbs: datum[1],\n          };\n        }\n        return null;\n      })\n      .filter(val => !!val);\n    this.setState({ data: nextData });\n  };\n\n  render() {\n    const { settings, country, group } = this.props;\n\n    return (\n      <Card title={`${country} - ${MacroNameMap[group]}`}>\n        <WaterfallPlot\n          data={this.state.data}\n          settings={{\n            ...settings,\n            numDataPoints: this.state.data.length + 1,\n            mode: this.state.mode,\n          }}\n        />\n        <div className=\"controls\">\n          <button className=\"btn randomize\" onClick={this.toggleMode}>\n            Toggle Mode\n          </button>\n          <button className=\"btn randomize\" onClick={this.processData}>\n            Randomize Data\n          </button>\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default Waterfall;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card } from 'antd';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { withInteraction } from '../../../Contexts/InteractionContext/withInteraction';\nimport Selector from '../../../Components/Selector';\nimport MacroNameMap from '../../../Modules/MacroNameMap';\n\nimport './WaterfallConfig.css';\n\nclass WaterfallConfig extends Component {\n  static propTypes = {\n    toggleView: PropTypes.func.isRequired,\n    interaction: PropTypes.shape({\n      fields: PropTypes.shape({\n        availableCountries: PropTypes.arrayOf(PropTypes.string.isRequired)\n          .isRequired,\n      }).isRequired,\n    }).isRequired,\n  };\n\n  render() {\n    const { availableCountries } = this.props.interaction.fields;\n    const { country, group } = this.props;\n\n    const GET_GROUP_OPTIONS = gql`\n      {\n        names(type: MACRO)\n      }\n    `;\n\n    const handleChange = type => value => {\n      this.props.handleChange({ [type]: value });\n    };\n\n    return (\n      <Query query={GET_GROUP_OPTIONS}>\n        {({ loading, error, data }) => {\n          if (error) console.log('Error loading gql data for YearSlider');\n\n          return (\n            <Card title=\"Waterfall Config\" loading={loading}>\n              {!loading && (\n                <div className=\"WaterfallConfig\">\n                  <Selector\n                    placeholder=\"Select a country\"\n                    options={availableCountries}\n                    handleChange={handleChange('country')}\n                    value={country || undefined}\n                  />\n                  <Selector\n                    placeholder=\"Select a group\"\n                    options={data.names.map(name => ({\n                      value: name,\n                      display: MacroNameMap[name],\n                    }))}\n                    handleChange={handleChange('group')}\n                    value={group || undefined}\n                  />\n                  <Button type=\"primary\" onClick={this.props.toggleView}>\n                    Visualize\n                  </Button>\n                </div>\n              )}\n            </Card>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withInteraction(WaterfallConfig);\n","import React, { Component } from 'react';\nimport { withData } from '../../../Contexts/DataContext/withData';\nimport WaterfallViz from '../WaterfallViz';\nimport WaterfallConfig from '../WaterfallConfig';\n\nclass WaterfallContainer extends Component {\n  state = {\n    displayConfig: true,\n    country: null,\n    group: null,\n    data: [],\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data.data !== this.props.data.data) this.filterData();\n  }\n\n  toggleView = () => {\n    this.setState(state => ({ displayConfig: !state.displayConfig }));\n  };\n\n  handleChange = async diff => {\n    await this.setState({ ...diff });\n    this.filterData();\n  };\n\n  filterData = () => {\n    const { country, group } = this.state;\n    let nextData = [];\n    if (!!country && !!group) {\n      nextData = this.props.data.data.map(d => [\n        d.year,\n        d.countries\n          .filter(c => c.country === country)[0]\n          .items.filter(item => item.name === group)[0].value,\n      ]);\n    }\n    this.setState({ data: nextData });\n  };\n\n  render() {\n    const { data, ...config } = this.state;\n    return (\n      <div>\n        {this.state.displayConfig ? (\n          <WaterfallConfig\n            handleChange={this.handleChange}\n            toggleView={this.toggleView}\n            {...config}\n          />\n        ) : (\n          <WaterfallViz\n            {...this.props}\n            {...config}\n            toggleView={this.toggleView}\n            data={data}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nWaterfallContainer.propTypes = {};\n\nexport default withData(WaterfallContainer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { withData } from '../../Contexts/DataContext/withData';\nimport { withInteraction } from '../../Contexts/InteractionContext/withInteraction';\nimport { Slider, Typography } from 'antd';\n\nconst { Text } = Typography;\n\nclass MySlider extends Component {\n  constructor(props) {\n    super(props);\n    const { min, max } = this.props;\n    this.handleRelease([min, max]);\n    this.state = {\n      value: [min, max],\n    };\n  }\n\n  static propTypes = {\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    interaction: PropTypes.shape({\n      setFields: PropTypes.func.isRequired,\n    }).isRequired,\n    data: PropTypes.shape({\n      setQuery: PropTypes.func.isRequired,\n    }).isRequired,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { availableYears } = this.props.interaction.fields;\n    if (prevProps.interaction.fields.availableYears !== availableYears) {\n      this.setState({\n        value: [availableYears[0], availableYears[availableYears.length - 1]],\n      });\n    }\n  }\n\n  handleChange = value => {\n    this.setState({ value });\n  };\n\n  handleRelease = value => {\n    // Create array of all years from base year to top year\n    const selectedYears = [...Array(value[1] - value[0] + 1).keys()].map(\n      v => value[0] + v\n    );\n    this.props.data.setQuery({\n      years: selectedYears,\n    });\n    this.props.interaction.setFields({\n      availableYears: selectedYears,\n    });\n  };\n\n  render() {\n    const { min, max } = this.props;\n\n    return (\n      <div>\n        <Text>Year</Text>\n        <Slider\n          range\n          min={min}\n          max={max}\n          onChange={this.handleChange}\n          onAfterChange={this.handleRelease}\n          value={this.state.value}\n        />\n      </div>\n    );\n  }\n}\n\nclass YearSlider extends Component {\n  render() {\n    const GET_YEAR_RANGE = gql`\n      {\n        yearRange {\n          min\n          max\n        }\n      }\n    `;\n\n    return (\n      <Query query={GET_YEAR_RANGE}>\n        {({ loading, error, data }) => {\n          if (loading) return 'Loading...';\n          if (error) console.log('Error loading gql data for YearSlider');\n          const { min, max } = data.yearRange;\n\n          return <MySlider {...this.props} min={min} max={max} />;\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withInteraction(withData(YearSlider));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { withData } from '../../Contexts/DataContext/withData';\nimport { withInteraction } from '../../Contexts/InteractionContext/withInteraction';\n\nclass PresetButton extends Component {\n  static propTypes = {\n    yearRange: PropTypes.arrayOf(PropTypes.number),\n    countries: PropTypes.arrayOf(PropTypes.string),\n    selectedYear: PropTypes.number,\n    selectedCountry: PropTypes.string,\n    children: PropTypes.string.isRequired,\n  };\n\n  handleClick = () => {\n    const { yearRange, countries, selectedYear, selectedCountry } = this.props;\n    let queryParams = {};\n    let fields = {};\n\n    if (!!yearRange) {\n      const years = [...Array(yearRange[1] - yearRange[0] + 1).keys()].map(\n        v => yearRange[0] + v\n      );\n      queryParams.years = years;\n      fields.availableYears = years;\n    }\n    if (!!countries) {\n      queryParams.countries = countries;\n      fields.availableCountries = countries;\n    }\n\n    if (!!selectedYear) fields.selectedYear = selectedYear;\n    if (!!selectedCountry) fields.selectedCountry = selectedCountry;\n\n    if (Object.keys(queryParams).length !== 0)\n      this.props.data.setQuery(queryParams);\n    if (Object.keys(fields).length !== 0)\n      this.props.interaction.setFields(fields);\n  };\n\n  render() {\n    return <Button onClick={this.handleClick}>{this.props.children}</Button>;\n  }\n}\n\nexport default withInteraction(withData(PresetButton));\n","import React, { Component } from 'react';\nimport {\n  CountryPicker,\n  YearSlider,\n  LineChart,\n  Waterfall,\n  ScatterPlot,\n} from '../../Visualizations';\nimport { Layout, Card } from 'antd';\n\nimport './VisualizationContainer.css';\nimport PresetButton from '../PresetButton/PresetButton';\n\nconst { Sider, Content } = Layout;\n\nclass VisualizationContainer extends Component {\n  state = {\n    waterfalls: [],\n  };\n\n  render() {\n    return (\n      <Layout style={{ height: '100vh' }}>\n        <Sider theme=\"light\" className=\"sideBar\">\n          <h1 className=\"App-title\">Nutrition InfoViz</h1>\n          <CountryPicker />\n          <YearSlider />\n          <PresetButton\n            countries={['Canada', 'Afghanistan', 'Mexico']}\n            yearRange={[1990, 2000]}\n          >\n            Preset 1\n          </PresetButton>\n        </Sider>\n        <Content className=\"dashboard\">\n          <ScatterPlot />\n          <LineChart />\n          {this.state.waterfalls}\n          <Card\n            onClick={() =>\n              this.setState({\n                waterfalls: [...this.state.waterfalls, <Waterfall />],\n              })\n            }\n            style={{ width: 375 }}\n          >\n            Click to add Waterfall\n          </Card>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\n// Receives no props\nVisualizationContainer.propTypes = {};\n\nexport default VisualizationContainer;\n","import * as React from 'react';\nimport { DataContext } from './data-context';\nimport ApolloClient from 'apollo-boost';\nimport gql from 'graphql-tag';\nimport { ApolloProvider } from 'react-apollo';\n\nexport default class DataProvider extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      setDate: this.setData,\n      setQuery: this.setQuery,\n      data: [],\n      queryParams: {\n        type: 'MACRO',\n        countries: [],\n        years: [],\n      },\n      loading: 0,\n    };\n    this.client = new ApolloClient({\n      // uri: 'http://localhost:4000/graphql',\n      uri: 'http://gql.healthviz.xyz/graphql',\n    });\n  }\n\n  setQuery = async nextQuery => {\n    await this.setState(state => ({\n      queryParams: {\n        ...state.queryParams,\n        ...nextQuery,\n      },\n    }));\n    this.getData();\n  };\n\n  setData = nextData => {\n    // save data to state\n    this.setState(state => ({ data: nextData, loading: state.loading - 1 }));\n  };\n\n  getData = () => {\n    const { years, countries, type } = this.state.queryParams;\n    this.setState(state => ({ loading: state.loading + 1 }));\n    this.client\n      .query({\n        query: gql`\n          {\n            itemByYearCountry(\n              ${years.length > 0 ? `years:${JSON.stringify(years)}, ` : ''}\n              ${\n                countries.length > 0\n                  ? `countries:${JSON.stringify(countries)}, `\n                  : ''\n              }\n              ${!!type ? `type:${type}` : ''}\n            )\n              {\n              year\n              countries {\n                country\n                items {\n                  country\n                  year\n                  type\n                  name\n                  value\n                }\n              }\n            }\n          }\n        `,\n      })\n      .then(result => this.setData(result.data.itemByYearCountry))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <DataContext.Provider value={this.state}>\n        <ApolloProvider client={this.client}>\n          {this.props.children}\n        </ApolloProvider>\n      </DataContext.Provider>\n    );\n  }\n}\n","import * as React from 'react';\nimport { InteractionContext } from './interaction-context';\n\nexport default class InteractionProvider extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      setFields: this.setFields,\n      fields: {\n        availableYears: [],\n        availableCountries: [],\n        selectedYear: null,\n        selectedCountry: null,\n        hoveredYear: null,\n        hoveredCountry: null,\n      },\n    };\n  }\n\n  setFields = nextFieldsDiff => {\n    // save Interaction to state\n    this.setState(state => ({\n      fields: { ...state.fields, ...nextFieldsDiff },\n    }));\n  };\n\n  render() {\n    return (\n      <InteractionContext.Provider value={this.state}>\n        {this.props.children}\n      </InteractionContext.Provider>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport VisualizationContainer from '../Components/VisualizationContainer';\nimport DataProvider from '../Contexts/DataContext/DataProvider';\nimport InteractionProvider from '../Contexts/InteractionContext/InteractionProvider';\n\nclass App extends Component {\n  render() {\n    return (\n      <DataProvider>\n        <InteractionProvider>\n          <div className=\"App\">\n            <VisualizationContainer />\n          </div>\n        </InteractionProvider>\n      </DataProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}