{"version":3,"sources":["Contexts/DataContext/data-context.js","Contexts/DataContext/withData.jsx","Contexts/InteractionContext/interaction-context.js","Contexts/InteractionContext/withInteraction.jsx","Visualizations/CountryPicker/CountryPicker.jsx","Components/Selector/Selector.jsx","Modules/MacroNameMap.js","Visualizations/LineChart/LineChart.jsx","Components/YearSelector/YearSelector.jsx","Visualizations/ScatterPlot/ScatterPlot.jsx","Visualizations/Waterfall/WaterfallViz/Waterfall.jsx","Visualizations/Waterfall/WaterfallConfig/WaterfallConfig.jsx","Visualizations/Waterfall/WaterfallContainer/WaterfallContainer.jsx","Visualizations/YearRangeSlider/YearRangeSlider.jsx","Components/PresetButton/PresetButton.jsx","Components/VisualizationContainer/VisualizationContainer.jsx","Contexts/DataContext/DataProvider.jsx","Contexts/InteractionContext/InteractionProvider.jsx","App/App.jsx","serviceWorker.js","index.js"],"names":["DataContext","React","withData","Component","props","react","Consumer","dataProps","Object","assign","data","InteractionContext","withInteraction","interactionProps","interaction","Text","Option","es_select","handleChange","value","_this","setQuery","countries","setFields","availableCountries","_this2","this","GET_COUNTRIES","gql","_templateObject","react_default","a","createElement","react_apollo_esm","query","_ref","loading","error","console","log","mode","style","width","placeholder","defaultValue","onChange","fields","map","country","key","Selector","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","options","index","Selector_Option","display","MacroNameMap","Grand Total - Animal Protein - Food supply","Grand Total - Carbs - Food supply","Grand Total - Fat - Food supply","Grand Total - Food supply","Grand Total - Plant Protein - Food supply","Grand Total - Protein - Food supply","settings","height","padding","XAxis","renderXAxis","node","refs","axisContainer","axis","d3","ticks","tickFormat","scale","call","className","ref","transform","translate","YAxis","renderYAxis","flip","XYAxis","LineChart_XAxis","concat","xScale","textAnchor","LineChart_YAxis","yScale","otherYScale","Line","renderLine","coords","x1","y1","x2","y2","strokeWidth","stroke","color","InteractionLine","_this$props$interacti","hoveredYear","selectedYear","renderYear","FilledSeries","_this$props","Fragment","LineChart_FillBottom","LineChart_Line","Color","darken","FillBottom","renderFillBottom","points","fill","LineGraph","availableYears","minYear","maxYear","length","domain","range","kcalMax","getXScale","yDietScale","getDataYScale","yLifeExpScale","getDeathYScale","LineChart_FilledSeries","measure4","measure3","measure2","measure1","lifeExpData","LineChart_XYAxis","LineChart_InteractionLine","processData","prevProps","selectedCountry","nextData","d","year","filter","c","items","reduce","acc","item","_objectSpread2","objectSpread","defineProperty","name","lifeExp","setState","totalData","yr","i","arr","carbData","fatData","animalProteinData","plantProteinData","_this3","GET_YEAR_RANGE","LineChart_templateObject","card","size","bodyStyle","title","extra","Components_Selector_Selector","disabled","max","kcalRange","LineChart_LineGraph","state","catchOutOfBoundsYear","_this$props$interacti2","min","slider","marks","onAfterChange","handleRelease","ScatterPlot_XAxis","ScatterPlot_YAxis","DataCircles","classCallCheck","possibleConstructorReturn","getPrototypeOf","getCircleRadius","Math","sqrt","PI","renderCircle","cx","cy","r","hovered","onClick","handleSelect","onMouseOver","onMouseOut","undefined","x","y","ScatterGraph","xRange","yRange","yDataScale","ScatterPlot_DataCircles","ScatterPlot_XYAxis","includes","GET_RANGES","ScatterPlot_templateObject","JSON","stringify","id","Components_YearSelector_YearSelector","lifeExpRange","ScatterPlot_ScatterGraph","MODE","Axis","renderAxis","orient","_this$props$settings","Waterfall_Axis","DataRectangles","renderRect","coord","dist","xDiff","abs","xAbs","xLast","onMouseEnter","onMouseLeave","numDataPoints","random","renderRectText","toFixed","WaterfallPlot","xMin","xMax","flat","absMax","getYScale","yMin","yMax","Waterfall_DataRectangles","Waterfall_XYAxis","Waterfall","toggleMode","_this4","datum","val","group","icon","type","theme","toggleView","handleClose","Waterfall_WaterfallPlot","defaultProps","baseYear","maxRange","GET_GROUP_OPTIONS","WaterfallConfig_templateObject","names","es_button","displayConfig","_callee","diff","regenerator_default","wrap","_context","prev","next","filterData","stop","_this$state","_this$state2","config","objectWithoutProperties","Waterfall_WaterfallConfig_WaterfallConfig","Waterfall_WaterfallViz_Waterfall","YearRangeSlider","selectedYears","toConsumableArray","Array","keys","v","years","_this$props2","YearRangeSlider_Text","YearRangeSlider_templateObject","_ref2","_data$yearRange","yearRange","YearRangeSlider_YearRangeSlider","handleClick","queryParams","Sider","Content","VisualizationContainer","waterfalls","waterfallCount","handleCloseWaterfall","w","layout","Visualizations_CountryPicker_CountryPicker","Visualizations_YearRangeSlider_YearRangeSlider","Components_PresetButton_PresetButton","target","href","rel","ScatterPlot_ScatterPlot","Visualizations_LineChart_LineChart","hoverable","flexDirection","alignItems","justifyContent","Waterfall_WaterfallContainer_WaterfallContainer","fontSize","DataProvider","asyncToGenerator","mark","nextQuery","getData","_x","apply","arguments","setData","_this$state$queryPara","client","DataProvider_templateObject","then","result","alls","catch","err","setDate","ApolloClient","uri","Provider","InteractionProvider","nextFieldsDiff","hoveredCountry","App","DataProvider_DataProvider","InteractionProvider_InteractionProvider","Components_VisualizationContainer_VisualizationContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a80d94b.chunk.js","sourcesContent":["import * as React from 'react';\n\nexport const DataContext = React.createContext();\n","import * as React from 'react';\nimport { DataContext } from './data-context';\n\nexport function withData(Component) {\n  return function DataComponent(props) {\n    return (\n      <DataContext.Consumer>\n        {dataProps => <Component {...props} data={dataProps} />}\n      </DataContext.Consumer>\n    );\n  };\n}\n","import * as React from 'react';\n\nexport const InteractionContext = React.createContext();\n","import * as React from 'react';\nimport { InteractionContext } from './interaction-context';\n\nexport function withInteraction(Component) {\n  return function InteractionComponent(props) {\n    return (\n      <InteractionContext.Consumer>\n        {interactionProps => (\n          <Component {...props} interaction={interactionProps} />\n        )}\n      </InteractionContext.Consumer>\n    );\n  };\n}\n","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { withData } from '../../Contexts/DataContext/withData';\nimport { withInteraction } from '../../Contexts/InteractionContext/withInteraction';\nimport { Select, Typography } from 'antd';\n\nconst { Text } = Typography;\n\nconst Option = Select.Option;\n\nclass CountryPicker extends Component {\n  handleChange = value => {\n    this.props.data.setQuery({ countries: value || [] });\n    this.props.interaction.setFields({ availableCountries: value || [] });\n  };\n\n  render() {\n    const GET_COUNTRIES = gql`\n      {\n        countries\n      }\n    `;\n\n    return (\n      <Query query={GET_COUNTRIES}>\n        {({ loading, error, data }) => {\n          if (loading) return 'Loading...';\n          if (error)\n            return console.log('Error loading gql data for CountryPicker');\n          const { countries } = data;\n\n          return (\n            <div>\n              <Text>Country</Text>\n              <Select\n                mode=\"multiple\"\n                style={{ width: '100%' }}\n                placeholder=\"Please select\"\n                defaultValue={[]}\n                onChange={this.handleChange}\n                value={this.props.interaction.fields.availableCountries}\n              >\n                {countries.map(country => (\n                  <Option key={country}>{country}</Option>\n                ))}\n              </Select>\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withInteraction(withData(CountryPicker));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from 'antd';\n\nconst Option = Select.Option;\n\nconst Selector = props => {\n  function handleChange(value) {\n    props.handleChange(value);\n  }\n\n  return (\n    <Select\n      {...props}\n      showSearch\n      style={{ width: 200 }}\n      placeholder={props.placeholder || 'Select one'}\n      optionFilterProp=\"children\"\n      onChange={handleChange}\n      filterOption={(input, option) =>\n        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {props.options.map((option, index) => (\n        <Option key={option.value || index} value={option.value || option}>\n          {option.display || option}\n        </Option>\n      ))}\n    </Select>\n  );\n};\n\nSelector.propTypes = {\n  placeholder: PropTypes.string,\n  handleChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.shape({\n        value: PropTypes.string.isRequired,\n        display: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n          .isRequired,\n      }),\n    ]).isRequired\n  ).isRequired,\n};\n\nexport default Selector;\n","export default {\n  'Grand Total - Animal Protein - Food supply': 'Animal Protein',\n  'Grand Total - Carbs - Food supply': 'Carbs',\n  'Grand Total - Fat - Food supply': 'Fat',\n  'Grand Total - Food supply': 'Grand Total',\n  'Grand Total - Plant Protein - Food supply': 'Plant Protein',\n  'Grand Total - Protein - Food supply': 'Protein',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport * as d3 from 'd3';\nimport Color from 'color';\nimport { Card } from 'antd';\nimport Selector from '../../Components/Selector';\nimport MacroNameMap from '../../Modules/MacroNameMap';\nimport { withData } from '../../Contexts/DataContext/withData';\nimport { withInteraction } from '../../Contexts/InteractionContext/withInteraction';\n\nimport './LineChart.css';\n\nconst settings = {\n  width: 800,\n  height: 400,\n  padding: 50,\n};\n\nclass XAxis extends React.Component {\n  static propTypes = {\n    translate: PropTypes.string.isRequired,\n    scale: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.renderXAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderXAxis();\n  }\n\n  renderXAxis() {\n    const node = this.refs.axisContainer;\n    const baseAxis = d3\n      .axisBottom()\n      .ticks(5)\n      .tickFormat(d3.format('d'));\n    const axis = baseAxis.scale(this.props.scale);\n    d3.select(node).call(axis);\n  }\n\n  render() {\n    return (\n      <g\n        className=\"axis\"\n        ref=\"axisContainer\"\n        transform={this.props.translate}\n      />\n    );\n  }\n}\n\nclass YAxis extends React.Component {\n  static propTypes = {\n    translate: PropTypes.string.isRequired,\n    scale: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.renderYAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderYAxis();\n  }\n\n  renderYAxis() {\n    const node = this.refs.axisContainer;\n    let baseAxis;\n    if (this.props.flip) baseAxis = d3.axisRight();\n    else baseAxis = d3.axisLeft();\n    const axis = baseAxis.ticks(5).scale(this.props.scale);\n    d3.select(node).call(axis);\n  }\n\n  render() {\n    return (\n      <g\n        className=\"axis\"\n        ref=\"axisContainer\"\n        transform={this.props.translate}\n      />\n    );\n  }\n}\n\nclass XYAxis extends React.Component {\n  static propTypes = {\n    padding: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <g className=\"LE-xy-axis\">\n        <XAxis\n          translate={`translate(0, ${this.props.height - this.props.padding})`}\n          scale={this.props.xScale}\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(${settings.width / 2 -\n            this.props.padding / 2}, ${settings.height - 5})`}\n        >\n          [year]\n        </text>\n        <YAxis\n          translate={`translate(${this.props.padding}, 0)`}\n          scale={this.props.yScale}\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(10, ${settings.height / 2}), rotate(-90)`}\n        >\n          [total kCal]\n        </text>\n        <YAxis\n          translate={`translate(${settings.width - this.props.padding}, 0)`}\n          scale={this.props.otherYScale}\n          flip\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(${settings.width - 10}, ${settings.height /\n            2}), rotate(-90)`}\n        >\n          [Mean Age of Death]\n        </text>\n      </g>\n    );\n  }\n}\n\nclass Line extends React.Component {\n  static propTypes = {\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  renderLine = (coords, index) => {\n    return (\n      <line\n        x1={this.props.xScale(coords[0])}\n        y1={this.props.yScale(coords[1])}\n        x2={this.props.xScale(coords[2])}\n        y2={this.props.yScale(coords[3])}\n        strokeWidth={1.5}\n        stroke={this.props.color}\n        key={index}\n      />\n    );\n  };\n\n  render() {\n    return <g>{this.props.data.map(this.renderLine)}</g>;\n  }\n}\n\nclass InteractionLine extends React.Component {\n  static propTypes = {\n    xScale: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { xScale } = this.props;\n    const { hoveredYear, selectedYear } = this.props.interaction.fields;\n\n    const renderYear = hoveredYear || selectedYear;\n\n    if (!renderYear) return null;\n\n    return (\n      <g>\n        <line\n          x1={xScale(renderYear)}\n          y1={settings.height - settings.padding}\n          x2={xScale(renderYear)}\n          y2={settings.padding / 2}\n          strokeWidth={1}\n          stroke=\"gray\"\n        />\n      </g>\n    );\n  }\n}\n\n// To be used later with interaction\n// class DataCircles extends React.Component {\n//   static propTypes = {\n//     xScale: PropTypes.func.isRequired,\n//     yScale: PropTypes.func.isRequired,\n//   };\n\n//   renderCircle(coords) {\n//     return (\n//       <circle\n//         cx={this.props.xScale(coords[2])}\n//         cy={this.props.yScale(coords[3])}\n//         r={3}\n//         key={Math.random()}\n//         fill={this.props.color}\n//       />\n//     );\n//   }\n\n//   render() {\n//     return <g>{this.props.data.map(this.renderCircle.bind(this))}</g>;\n//   }\n// }\n\nclass FilledSeries extends Component {\n  static propTypes = {\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n    data: PropTypes.array.isRequired,\n    color: PropTypes.string.isRequired,\n  };\n\n  render() {\n    const { xScale, yScale, data, color } = this.props;\n    return (\n      <React.Fragment>\n        <FillBottom xScale={xScale} yScale={yScale} data={data} color={color} />\n        <Line\n          xScale={xScale}\n          yScale={yScale}\n          data={data}\n          color={Color(color).darken(0.1)}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nclass FillBottom extends React.Component {\n  static propTypes = {\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  renderFillBottom = (coords, index) => {\n    return (\n      <polygon\n        points={`\n        ${this.props.xScale(coords[0])},${this.props.yScale(0)}\n        ${this.props.xScale(coords[2])},${this.props.yScale(0)}\n        ${this.props.xScale(coords[2])},${this.props.yScale(coords[3])}\n        ${this.props.xScale(coords[0])},${this.props.yScale(coords[1])}\n        `}\n        fill={this.props.color}\n        key={index}\n      />\n    );\n  };\n\n  render() {\n    return <g>{this.props.data.map(this.renderFillBottom)}</g>;\n  }\n}\n\nclass LineGraph extends React.Component {\n  static propTypes = {\n    padding: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    data: PropTypes.array.isRequired,\n    kcalMax: PropTypes.number.isRequired,\n  };\n\n  getXScale() {\n    const { availableYears } = this.props.interaction.fields;\n    const minYear = availableYears[0];\n    const maxYear = availableYears[availableYears.length - 1];\n\n    return d3\n      .scaleLinear()\n      .domain([minYear, maxYear])\n      .range([this.props.padding, this.props.width - this.props.padding]);\n  }\n\n  getDataYScale() {\n    return d3\n      .scaleLinear()\n      .domain([0, this.props.kcalMax])\n      .range([this.props.height - this.props.padding, this.props.padding / 2]);\n  }\n  getDeathYScale() {\n    return d3\n      .scaleLinear()\n      .domain([20, 80])\n      .range([this.props.height - this.props.padding, this.props.padding / 2]);\n  }\n\n  render() {\n    const xScale = this.getXScale();\n    const yDietScale = this.getDataYScale();\n    const yLifeExpScale = this.getDeathYScale();\n\n    return (\n      <svg width={this.props.width} height={this.props.height}>\n        <FilledSeries\n          xScale={xScale}\n          yScale={yDietScale}\n          data={this.props.measure4}\n          color=\"#70b678\"\n        />\n        <FilledSeries\n          xScale={xScale}\n          yScale={yDietScale}\n          data={this.props.measure3}\n          color=\"#bbdbad\"\n        />\n        <FilledSeries\n          xScale={xScale}\n          yScale={yDietScale}\n          data={this.props.measure2}\n          color=\"#c79fc8\"\n        />\n        <FilledSeries\n          xScale={xScale}\n          yScale={yDietScale}\n          data={this.props.measure1}\n          color=\"#f4a58a\"\n        />\n        <Line\n          xScale={xScale}\n          yScale={yLifeExpScale}\n          {...this.props}\n          data={this.props.lifeExpData}\n          color=\"#444444\"\n        />\n        <XYAxis\n          xScale={xScale}\n          yScale={yDietScale}\n          otherYScale={yLifeExpScale}\n          {...this.props}\n        />\n        <InteractionLine xScale={xScale} {...this.props} />\n      </svg>\n    );\n  }\n}\n\nclass LineChart extends React.Component {\n  componentWillMount() {\n    this.processData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.data.data !== this.props.data.data ||\n      prevProps.interaction.fields.selectedCountry !==\n        this.props.interaction.fields.selectedCountry\n    ) {\n      this.processData();\n    }\n  }\n\n  processData() {\n    // each datapoint in form of [year, totalKCal, measure1, measure2, measure3]\n    const { selectedCountry } = this.props.interaction.fields;\n    let nextData = [];\n    if (!!selectedCountry) {\n      nextData = this.props.data.data.map(d => [\n        d.year,\n        d.countries\n          .filter(c => c.country === selectedCountry)[0]\n          .items.reduce(\n            (acc, item) => ({\n              ...acc,\n              [MacroNameMap[item.name]]: item.value,\n              lifeExp: item.lifeExp,\n            }),\n            {}\n          ),\n      ]);\n    }\n\n    this.setState({\n      data: nextData,\n      // x1, y1, x2, y2\n      totalData: nextData\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else\n            return [\n              yr[0],\n              yr[1]['Grand Total'],\n              arr[i - 1][0],\n              arr[i - 1][1]['Grand Total'],\n            ];\n        })\n        .filter(d => !!d),\n      lifeExpData: nextData\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else\n            return [\n              yr[0],\n              yr[1]['lifeExp'],\n              arr[i - 1][0],\n              arr[i - 1][1]['lifeExp'],\n            ];\n        })\n        .filter(d => !!d),\n      carbData: nextData\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else\n            return [\n              yr[0],\n              yr[1]['Carbs'],\n              arr[i - 1][0],\n              arr[i - 1][1]['Carbs'],\n            ];\n        })\n        .filter(d => !!d),\n      fatData: nextData\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else\n            return [\n              yr[0],\n              yr[1]['Carbs'] + yr[1]['Fat'],\n              arr[i - 1][0],\n              arr[i - 1][1]['Carbs'] + arr[i - 1][1]['Fat'],\n            ];\n        })\n        .filter(d => !!d),\n      animalProteinData: nextData\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else\n            return [\n              yr[0],\n              yr[1]['Carbs'] + yr[1]['Fat'] + yr[1]['Animal Protein'],\n              arr[i - 1][0],\n              arr[i - 1][1]['Carbs'] +\n                arr[i - 1][1]['Fat'] +\n                arr[i - 1][1]['Animal Protein'],\n            ];\n        })\n        .filter(d => !!d),\n      plantProteinData: nextData\n        .map((yr, i, arr) => {\n          if (i === 0) return undefined;\n          else\n            return [\n              yr[0],\n              yr[1]['Carbs'] +\n                yr[1]['Fat'] +\n                yr[1]['Animal Protein'] +\n                yr[1]['Plant Protein'],\n              arr[i - 1][0],\n              arr[i - 1][1]['Carbs'] +\n                arr[i - 1][1]['Fat'] +\n                arr[i - 1][1]['Animal Protein'] +\n                arr[i - 1][1]['Plant Protein'],\n            ];\n        })\n        .filter(d => !!d),\n    });\n  }\n\n  render() {\n    const GET_YEAR_RANGE = gql`\n      {\n        kcalRange {\n          max\n        }\n      }\n    `;\n\n    return (\n      <Card\n        size=\"small\"\n        bodyStyle={{ width: 824, height: 424 }}\n        title=\"Life Expectancy v. Total kCal Consumption\"\n        extra={\n          <Selector\n            options={this.props.interaction.fields.availableCountries || []}\n            handleChange={value =>\n              this.props.interaction.setFields({\n                selectedCountry: value,\n              })\n            }\n            value={this.props.interaction.fields.selectedCountry}\n            disabled={\n              !!this.props.data.loading ||\n              !this.props.interaction.fields.availableCountries\n            }\n            placeholder=\"Select Country\"\n          />\n        }\n      >\n        <Query query={GET_YEAR_RANGE}>\n          {({ loading, error, data }) => {\n            if (loading || this.props.data.loading) return 'Loading...';\n            if (error)\n              return console.log('Error loading gql data for LineChart');\n            const { max } = data.kcalRange;\n\n            if (!this.props.interaction.fields.selectedCountry)\n              return 'select a country';\n            return (\n              <LineGraph\n                {...this.props}\n                data={this.state.totalData}\n                lifeExpData={this.state.lifeExpData}\n                measure1={this.state.carbData}\n                measure2={this.state.fatData}\n                measure3={this.state.animalProteinData}\n                measure4={this.state.plantProteinData}\n                kcalMax={max}\n                {...settings}\n              />\n            );\n          }}\n        </Query>\n      </Card>\n    );\n  }\n}\n\nexport default withInteraction(withData(LineChart));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withData } from '../../Contexts/DataContext/withData';\nimport { withInteraction } from '../../Contexts/InteractionContext/withInteraction';\nimport { Slider } from 'antd';\n\nimport './YearSelector.css';\n\nclass YearSelector extends Component {\n  static propTypes = {\n    interaction: PropTypes.shape({\n      setFields: PropTypes.func.isRequired,\n      fields: PropTypes.shape({\n        availableYears: PropTypes.arrayOf(PropTypes.number).isRequired,\n      }).isRequired,\n    }).isRequired,\n  };\n\n  componentDidUpdate(prevProps) {\n    this.catchOutOfBoundsYear();\n  }\n\n  catchOutOfBoundsYear() {\n    const { selectedYear, availableYears } = this.props.interaction.fields;\n\n    if (!selectedYear && availableYears.length > 0) {\n      this.props.interaction.setFields({\n        selectedYear: availableYears[0],\n      });\n    }\n    if (availableYears[0] > selectedYear) {\n      this.handleChange(availableYears[0]);\n    }\n    if (availableYears[availableYears.length - 1] < selectedYear) {\n      this.handleChange(availableYears[availableYears.length - 1]);\n    }\n  }\n\n  handleChange = value => {\n    this.props.interaction.setFields({\n      selectedYear: value,\n    });\n  };\n\n  render() {\n    const {\n      availableYears,\n      selectedYear,\n      hoveredYear,\n    } = this.props.interaction.fields;\n    const min = availableYears[0];\n    const max = availableYears[availableYears.length - 1];\n\n    return (\n      <Slider\n        min={min}\n        max={max}\n        marks={{ [min]: min, [max]: max }}\n        onChange={this.handleChange}\n        onAfterChange={this.handleRelease}\n        value={hoveredYear || selectedYear || min}\n        style={{ width: 100 }}\n        disabled={this.props.disabled}\n      />\n    );\n  }\n}\n\nexport default withInteraction(withData(YearSelector));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport * as d3 from 'd3';\nimport { Card } from 'antd';\nimport { withData } from '../../Contexts/DataContext/withData';\nimport { withInteraction } from '../../Contexts/InteractionContext/withInteraction';\nimport MacroNameMap from '../../Modules/MacroNameMap';\nimport YearSelector from '../../Components/YearSelector';\n\nimport './ScatterPlot.css';\n\nconst settings = {\n  width: 500,\n  height: 400,\n  padding: 50,\n};\n\nclass XAxis extends React.Component {\n  static propTypes = {\n    translate: PropTypes.string.isRequired,\n    scale: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.renderXAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderXAxis();\n  }\n\n  renderXAxis() {\n    const node = this.refs.axisContainer;\n    const baseAxis = d3\n      .axisBottom()\n      .ticks(5)\n      .tickFormat(d3.format('d'));\n    const axis = baseAxis.scale(this.props.scale);\n    d3.select(node).call(axis);\n  }\n\n  render() {\n    return (\n      <g\n        className=\"axis\"\n        ref=\"axisContainer\"\n        transform={this.props.translate}\n      />\n    );\n  }\n}\n\nclass YAxis extends React.Component {\n  static propTypes = {\n    translate: PropTypes.string.isRequired,\n    scale: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.renderYAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderYAxis();\n  }\n\n  renderYAxis() {\n    const node = this.refs.axisContainer;\n    let baseAxis;\n    if (this.props.flip) baseAxis = d3.axisRight();\n    else baseAxis = d3.axisLeft();\n    const axis = baseAxis.ticks(5).scale(this.props.scale);\n    d3.select(node).call(axis);\n  }\n\n  render() {\n    return (\n      <g\n        className=\"axis\"\n        ref=\"axisContainer\"\n        transform={this.props.translate}\n      />\n    );\n  }\n}\n\nclass XYAxis extends React.Component {\n  static propTypes = {\n    padding: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <g className=\"LE-xy-axis\">\n        <XAxis\n          translate={`translate(0, ${this.props.height - this.props.padding})`}\n          scale={this.props.xScale}\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(${settings.width / 2 -\n            this.props.padding / 2}, ${settings.height - 10})`}\n        >\n          [Total KCals]\n        </text>\n        <YAxis\n          translate={`translate(${this.props.padding}, 0)`}\n          scale={this.props.yScale}\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(10, ${settings.height / 2}), rotate(-90)`}\n        >\n          [Life Expectancy]\n        </text>\n      </g>\n    );\n  }\n}\n\nclass DataCircles extends React.Component {\n  static propTypes = {\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n    handleSelect: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { hovered: undefined };\n  }\n\n  getCircleRadius = value => {\n    return Math.sqrt(value / Math.PI) * 2.5;\n  };\n\n  renderCircle = (coords, index) => {\n    return (\n      <svg key={index}>\n        <circle\n          cx={this.props.xScale(coords[2])}\n          cy={this.props.yScale(coords[3])}\n          r={5}\n          // r={this.getCircleRadius(coords[4])}\n\n          fill={this.state.hovered === index ? 'red' : this.props.color}\n          onClick={() => this.props.handleSelect(coords[0])}\n          onMouseOver={() => this.setState({ hovered: index })}\n          onMouseOut={() => this.setState({ hovered: undefined })}\n        />\n        <text\n          className=\"data_labels\"\n          x={this.props.xScale(coords[2])}\n          // x={this.props.xScale(coords[2]) + this.getCircleRadius(coords[4])}\n          y={this.props.yScale(coords[3]) - 3}\n        >\n          {coords[0]}\n        </text>\n      </svg>\n    );\n  };\n\n  render() {\n    return <g>{this.props.data.map(this.renderCircle)}</g>;\n  }\n}\n\nclass ScatterGraph extends React.Component {\n  static propTypes = {\n    padding: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    data: PropTypes.array.isRequired,\n  };\n\n  getXScale() {\n    return d3\n      .scaleLinear()\n      .domain(this.props.xRange) // When data begins, ends\n      .range([this.props.padding, this.props.width - this.props.padding / 2]);\n  }\n\n  getDataYScale() {\n    return d3\n      .scaleLinear()\n      .domain(this.props.yRange)\n      .range([this.props.height - this.props.padding, this.props.padding / 2]);\n  }\n\n  render() {\n    const xScale = this.getXScale();\n    const yDataScale = this.getDataYScale();\n\n    return (\n      <svg width={this.props.width} height={this.props.height}>\n        <DataCircles\n          xScale={xScale}\n          yScale={yDataScale}\n          {...this.props}\n          data={this.props.data}\n          handleSelect={this.props.handleSelect}\n          color=\"#80b0ff\"\n        />\n        <XYAxis xScale={xScale} yScale={yDataScale} {...this.props} />\n      </svg>\n    );\n  }\n}\n\nclass ScatterPlotViz extends Component {\n  static propTypes = {\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n  };\n\n  state = { data: [] };\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.data.data !== this.props.data.data ||\n      prevProps.interaction.fields.availableCountries !==\n        this.props.interaction.fields.availableCountries ||\n      prevProps.interaction.fields.selectedYear !==\n        this.props.interaction.fields.selectedYear ||\n      prevProps.interaction.fields.hoveredYear !==\n        this.props.interaction.fields.hoveredYear\n    ) {\n      this.processData();\n    }\n  }\n\n  processData() {\n    // each datapoint in form of [Country, year, total KCals, LifeExpect, population]\n    const {\n      availableCountries,\n      selectedYear,\n      hoveredYear,\n    } = this.props.interaction.fields;\n    let nextData = [];\n\n    if (\n      this.props.data.data.length !== 0 &&\n      availableCountries.length !== 0 &&\n      !!selectedYear\n    ) {\n      nextData = this.props.data.data\n        .map(d => [\n          d.year,\n          d.countries\n            .filter(c => availableCountries.includes(c.country))\n            .map(c =>\n              c.items.reduce(\n                (acc, item) => ({\n                  ...acc,\n                  [MacroNameMap[item.name]]: item.value,\n                  lifeExp: item.lifeExp,\n                }),\n                { country: c.country, year: d.year }\n              )\n            ),\n        ])\n        .filter(yr =>\n          !!hoveredYear ? yr[0] === hoveredYear : yr[0] === selectedYear\n        )[0][1]\n        .map(c => [c.country, c.year, c['Grand Total'], c.lifeExp]);\n    }\n\n    this.setState({\n      data: nextData || [],\n    });\n  }\n\n  render() {\n    const GET_RANGES = gql`\n      {\n        kcalRange {\n          min\n          max\n        }\n        lifeExpRange(countries: ${JSON.stringify(\n          this.props.interaction.fields.availableCountries\n        )}) {\n          min\n          max\n        }\n      }\n    `;\n\n    return (\n      <div id=\"scatterplot\">\n        <Card\n          size=\"small\"\n          bodyStyle={{ width: 524, height: 424 }}\n          title=\"Life Expectancy v. Total kCal\"\n          extra={<YearSelector disabled={!!this.props.data.loading} />}\n        >\n          <Query query={GET_RANGES}>\n            {({ loading, error, data }) => {\n              if (loading || this.props.data.loading) return 'Loading...';\n              if (error)\n                return console.log(\n                  'Error loading gql data for WaterfallConfig'\n                );\n\n              const { kcalRange, lifeExpRange } = data;\n              return (\n                <ScatterGraph\n                  data={this.state.data}\n                  xRange={[kcalRange.min, kcalRange.max]}\n                  yRange={[lifeExpRange.min, lifeExpRange.max]}\n                  handleSelect={country =>\n                    this.props.interaction.setFields({\n                      selectedCountry: country,\n                    })\n                  }\n                  {...settings}\n                />\n              );\n            }}\n          </Query>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default withInteraction(withData(ScatterPlotViz));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport { Card, Icon } from 'antd';\nimport MacroNameMap from '../../../Modules/MacroNameMap';\nimport { withInteraction } from '../../../Contexts/InteractionContext/withInteraction';\n\nimport './Waterfall.css';\n\nconst MODE = ['ALIGN', 'FOLLOW'];\n\nclass Axis extends React.Component {\n  static propTypes = {\n    translate: PropTypes.string.isRequired,\n    orient: PropTypes.oneOf(['bottom', 'top', 'left']).isRequired,\n    scale: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.renderAxis();\n  }\n\n  componentDidUpdate() {\n    this.renderAxis();\n  }\n\n  renderAxis = () => {\n    const node = this.refs.axisContainer;\n    const baseAxis =\n      this.props.orient === 'bottom'\n        ? d3.axisBottom()\n        : this.props.orient === 'top'\n        ? d3.axisTop()\n        : this.props.orient === 'left'\n        ? d3.axisLeft()\n        : null;\n    const axis = baseAxis.ticks(5).scale(this.props.scale);\n\n    d3.select(node).call(axis);\n  };\n\n  render() {\n    return (\n      <g\n        className=\"axis\"\n        ref=\"axisContainer\"\n        transform={this.props.translate}\n      />\n    );\n  }\n}\n\nclass XYAxis extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      padding: PropTypes.number,\n    }),\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {\n      settings: { padding, width, height, mode },\n    } = this.props;\n    return (\n      <g className=\"xy-axis\">\n        <Axis\n          translate={`translate(0, ${padding})`}\n          scale={this.props.xScale}\n          orient=\"top\"\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={`translate(${width / 2}, 15)`}\n        >\n          [kCal / person / day]\n        </text>\n        <Axis\n          translate={\n            mode === MODE[1]\n              ? `translate(${padding}, 0)`\n              : `translate(${width / 2}, 0)`\n          }\n          scale={this.props.yScale}\n          orient=\"left\"\n        />\n        <text\n          className=\"axis\"\n          textAnchor=\"middle\"\n          transform={\n            mode === MODE[1]\n              ? `translate(${padding}, ${height - padding + 20}), rotate(-90)`\n              : `translate(${width / 2}, ${height - padding + 15})`\n          }\n        >\n          [year]\n        </text>\n      </g>\n    );\n  }\n}\n\nclass DataRectangles extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      numDataPoints: PropTypes.number,\n    }),\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n  };\n\n  renderRect = coord => {\n    const { settings } = this.props;\n\n    if (settings.mode === MODE[0]) {\n      var dist = settings.width / 2 - this.props.xScale(coord.xDiff);\n      var width = Math.abs(dist);\n      var x = dist > 0 ? this.props.xScale(coord.xDiff) : settings.width / 2;\n    } else if (settings.mode === MODE[1]) {\n      dist = this.props.xScale(coord.xAbs) - this.props.xScale(coord.xLast);\n      width = Math.abs(dist);\n      x =\n        coord.xDiff > 0\n          ? this.props.xScale(coord.xLast)\n          : this.props.xScale(coord.xAbs);\n    }\n\n    return (\n      <g\n        onMouseEnter={() =>\n          this.props.interaction.setFields({ hoveredYear: coord.year })\n        }\n        onMouseLeave={() =>\n          this.props.interaction.setFields({ hoveredYear: null })\n        }\n      >\n        <rect\n          x={settings.padding}\n          y={this.props.yScale(coord.year)}\n          width={settings.width - settings.padding * 2}\n          height={\n            (settings.height - settings.padding * 2) / settings.numDataPoints\n          }\n          className={\n            this.props.interaction.fields.hoveredYear === coord.year\n              ? 'hoverBar'\n              : ''\n          }\n          key={Math.random() * 1}\n        />\n        <rect\n          x={x}\n          y={this.props.yScale(coord.year)}\n          width={width}\n          height={\n            (settings.height - settings.padding * 2) / settings.numDataPoints\n          }\n          className={coord.xDiff > 0 ? 'goodBar' : 'badBar'}\n          key={Math.random() * 1}\n        />\n      </g>\n    );\n  };\n\n  renderRectText = coord => {\n    const { settings } = this.props;\n    if (settings.mode === MODE[0]) {\n      var dist = settings.width / 2 - this.props.xScale(coord.xDiff);\n      var x = settings.width / 2 - dist;\n    } else if (settings.mode === MODE[1]) {\n      dist = this.props.xScale(coord.xAbs) - this.props.xScale(coord.xLast);\n      x = this.props.xScale(coord.xLast) + (coord.xDiff > 0 ? 3 : -3);\n    }\n\n    return (\n      <text\n        textAnchor={coord.xDiff > 0 ? 'start' : 'end'}\n        x={x}\n        y={\n          this.props.yScale(coord.year) +\n          settings.height / settings.numDataPoints / 2 +\n          3\n        }\n        key={Math.random() * 1}\n      >\n        {coord.xDiff > 0 && '+'}\n        {coord.xDiff.toFixed(1)}\n      </text>\n    );\n  };\n\n  render() {\n    return (\n      <g>\n        {this.props.data.map(this.renderRect)}\n        {this.props.data.map(this.renderRectText)}\n      </g>\n    );\n  }\n}\n\nclass WaterfallPlot extends React.Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      baseYear: PropTypes.number,\n      numDataPoints: PropTypes.number,\n      maxRange: PropTypes.func,\n    }),\n    data: PropTypes.array.isRequired,\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n  };\n\n  getXScale = () => {\n    const { settings } = this.props;\n\n    if (settings.mode === MODE[0]) {\n      var xMin = d3.min(this.props.data, d => d.xDiff);\n      var xMax = d3.max(this.props.data, d => d.xDiff);\n    } else if (settings.mode === MODE[1]) {\n      xMin = d3.min(this.props.data.map(d => [d.xAbs, d.xLast]).flat());\n      xMax = d3.max(this.props.data.map(d => [d.xAbs, d.xLast]).flat());\n    }\n\n    const absMax = d3.max([Math.abs(xMin), Math.abs(xMax)]);\n    return d3\n      .scaleLinear()\n      .domain([settings.mode === MODE[0] ? -absMax : xMin, absMax])\n      .range([settings.padding, settings.width - settings.padding]);\n  };\n\n  getYScale = () => {\n    const { settings } = this.props;\n\n    const yMin = d3.min(this.props.data, d => d.year);\n    const yMax = d3.max(this.props.data, d => d.year);\n\n    return d3\n      .scaleLinear()\n      .domain([yMin, yMax + 1])\n      .range([settings.padding, settings.height - settings.padding]);\n  };\n\n  render() {\n    const { settings } = this.props;\n\n    const xScale = this.props.xScale || this.getXScale();\n    const yScale = this.props.xScale || this.getYScale();\n\n    return (\n      <svg width={settings.width} height={settings.height}>\n        <DataRectangles xScale={xScale} yScale={yScale} {...this.props} />\n        <XYAxis xScale={xScale} yScale={yScale} {...this.props} />\n      </svg>\n    );\n  }\n}\n\nclass Waterfall extends Component {\n  static propTypes = {\n    settings: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number,\n      padding: PropTypes.number,\n      baseYear: PropTypes.number,\n      numDataPoints: PropTypes.number,\n      maxRange: PropTypes.func,\n    }),\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n  };\n  static defaultProps = {\n    settings: {\n      width: 300,\n      height: 400,\n      padding: 40,\n      baseYear: 1985,\n      numDataPoints: 30,\n      maxRange: () => Math.random() * 100,\n    },\n  };\n\n  state = {\n    mode: MODE[1],\n    data: [],\n  };\n\n  componentWillMount() {\n    this.processData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) this.processData();\n  }\n\n  toggleMode = () => {\n    const { mode } = this.state;\n    if (mode === MODE[0]) this.setState({ mode: MODE[1] });\n    else if (mode === MODE[1]) this.setState({ mode: MODE[0] });\n  };\n\n  processData = () => {\n    const nextData = this.props.data\n      .map((datum, index, arr) => {\n        if (index !== 0) {\n          return {\n            year: datum[0],\n            xLast: arr[index - 1][1],\n            xDiff: datum[1] - arr[index - 1][1],\n            xAbs: datum[1],\n          };\n        }\n        return null;\n      })\n      .filter(val => !!val);\n    this.setState({ data: nextData });\n  };\n\n  render() {\n    const { settings, country, group } = this.props;\n\n    return (\n      <Card\n        size=\"small\"\n        bodyStyle={{ width: 324, height: 424 }}\n        title={`${country} - ${MacroNameMap[group]}`}\n        extra={\n          <div className=\"vizMenuExtra\">\n            <Icon type=\"swap\" theme=\"outlined\" onClick={this.toggleMode} />\n            <Icon\n              type=\"setting\"\n              theme=\"filled\"\n              onClick={this.props.toggleView}\n            />\n            <Icon\n              type=\"close\"\n              theme=\"outlined\"\n              onClick={this.props.handleClose}\n            />\n          </div>\n        }\n      >\n        <WaterfallPlot\n          data={this.state.data}\n          interaction={this.props.interaction}\n          settings={{\n            ...settings,\n            numDataPoints: this.state.data.length,\n            mode: this.state.mode,\n          }}\n        />\n      </Card>\n    );\n  }\n}\n\nexport default withInteraction(Waterfall);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Button, Card, Icon } from 'antd';\nimport { withData } from '../../../Contexts/DataContext/withData';\nimport { withInteraction } from '../../../Contexts/InteractionContext/withInteraction';\nimport Selector from '../../../Components/Selector';\nimport MacroNameMap from '../../../Modules/MacroNameMap';\n\nimport './WaterfallConfig.css';\n\nclass WaterfallConfig extends Component {\n  static propTypes = {\n    toggleView: PropTypes.func.isRequired,\n    interaction: PropTypes.shape({\n      fields: PropTypes.shape({\n        availableCountries: PropTypes.arrayOf(PropTypes.string.isRequired)\n          .isRequired,\n      }).isRequired,\n    }).isRequired,\n  };\n\n  render() {\n    const { availableCountries } = this.props.interaction.fields;\n    const { country, group } = this.props;\n\n    const GET_GROUP_OPTIONS = gql`\n      {\n        names(type: MACRO)\n      }\n    `;\n\n    const handleChange = type => value => {\n      this.props.handleChange({ [type]: value });\n    };\n\n    return (\n      <Query query={GET_GROUP_OPTIONS}>\n        {({ loading, error, data }) => {\n          if (error)\n            return console.log('Error loading gql data for WaterfallConfig');\n\n          return (\n            <Card\n              size=\"small\"\n              bodyStyle={{ width: 324, height: 424 }}\n              title=\"Waterfall Config\"\n              extra={\n                <Icon\n                  type=\"close\"\n                  theme=\"outlined\"\n                  onClick={this.props.handleClose}\n                />\n              }\n            >\n              {loading || this.props.data.loading ? (\n                'Loading...'\n              ) : (\n                <div className=\"WaterfallConfig\">\n                  <Selector\n                    placeholder=\"Select a country\"\n                    options={availableCountries}\n                    handleChange={handleChange('country')}\n                    value={country || undefined}\n                  />\n                  <Selector\n                    placeholder=\"Select a group\"\n                    options={data.names.map(name => ({\n                      value: name,\n                      display: MacroNameMap[name],\n                    }))}\n                    handleChange={handleChange('group')}\n                    value={group || undefined}\n                  />\n                  <Button type=\"primary\" onClick={this.props.toggleView}>\n                    Visualize\n                  </Button>\n                </div>\n              )}\n            </Card>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withInteraction(withData(WaterfallConfig));\n","import React, { Component } from 'react';\nimport { withData } from '../../../Contexts/DataContext/withData';\nimport WaterfallViz from '../WaterfallViz';\nimport WaterfallConfig from '../WaterfallConfig';\n\nclass WaterfallContainer extends Component {\n  state = {\n    displayConfig: true,\n    country: null,\n    group: null,\n    data: [],\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data.data !== this.props.data.data) this.filterData();\n  }\n\n  toggleView = () => {\n    this.setState(state => ({ displayConfig: !state.displayConfig }));\n  };\n\n  handleChange = async diff => {\n    await this.setState({ ...diff });\n    this.filterData();\n  };\n\n  filterData = () => {\n    const { country, group } = this.state;\n    let nextData = [];\n    if (!!country && !!group) {\n      nextData = this.props.data.data.map(d => [\n        d.year,\n        d.countries\n          .filter(c => c.country === country)[0]\n          .items.filter(item => item.name === group)[0].value,\n      ]);\n    }\n    this.setState({ data: nextData });\n  };\n\n  render() {\n    const { data, ...config } = this.state;\n    return (\n      <div>\n        {this.state.displayConfig ? (\n          <WaterfallConfig\n            handleChange={this.handleChange}\n            toggleView={this.toggleView}\n            handleClose={this.props.handleClose}\n            {...config}\n          />\n        ) : (\n          <WaterfallViz\n            {...this.props}\n            {...config}\n            toggleView={this.toggleView}\n            handleClose={this.props.handleClose}\n            data={data}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nWaterfallContainer.propTypes = {};\n\nexport default withData(WaterfallContainer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { withData } from '../../Contexts/DataContext/withData';\nimport { withInteraction } from '../../Contexts/InteractionContext/withInteraction';\nimport { Slider, Typography } from 'antd';\n\nconst { Text } = Typography;\n\nclass YearRangeSlider extends Component {\n  constructor(props) {\n    super(props);\n    const { min, max } = this.props;\n    this.handleRelease([min, max]);\n    this.state = {\n      value: [min, max],\n    };\n  }\n\n  static propTypes = {\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    interaction: PropTypes.shape({\n      setFields: PropTypes.func.isRequired,\n    }).isRequired,\n    data: PropTypes.shape({\n      setQuery: PropTypes.func.isRequired,\n    }).isRequired,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { availableYears } = this.props.interaction.fields;\n    if (prevProps.interaction.fields.availableYears !== availableYears) {\n      this.setState({\n        value: [availableYears[0], availableYears[availableYears.length - 1]],\n      });\n    }\n  }\n\n  handleChange = value => {\n    this.setState({ value });\n  };\n\n  handleRelease = value => {\n    // Create array of all years from base year to top year\n    const selectedYears = [...Array(value[1] - value[0] + 1).keys()].map(\n      v => value[0] + v\n    );\n    this.props.data.setQuery({\n      years: selectedYears,\n    });\n    this.props.interaction.setFields({\n      availableYears: selectedYears,\n    });\n  };\n\n  render() {\n    const { min, max } = this.props;\n\n    return (\n      <div>\n        <Text>Year</Text>\n        <Slider\n          range\n          min={min}\n          max={max}\n          marks={{ [min]: min, [max]: max }}\n          onChange={this.handleChange}\n          onAfterChange={this.handleRelease}\n          value={this.state.value}\n        />\n      </div>\n    );\n  }\n}\n\nclass YearRangeSliderContainer extends Component {\n  render() {\n    const GET_YEAR_RANGE = gql`\n      {\n        yearRange {\n          min\n          max\n        }\n      }\n    `;\n\n    return (\n      <Query query={GET_YEAR_RANGE}>\n        {({ loading, error, data }) => {\n          if (loading) return 'Loading...';\n          if (error)\n            return console.log(\n              'Error loading gql data for YearRangeSliderContainer'\n            );\n          const { min, max } = data.yearRange;\n\n          return <YearRangeSlider {...this.props} min={min} max={max} />;\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withInteraction(withData(YearRangeSliderContainer));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport { withData } from '../../Contexts/DataContext/withData';\nimport { withInteraction } from '../../Contexts/InteractionContext/withInteraction';\n\nclass PresetButton extends Component {\n  static propTypes = {\n    yearRange: PropTypes.arrayOf(PropTypes.number),\n    countries: PropTypes.arrayOf(PropTypes.string),\n    selectedYear: PropTypes.number,\n    selectedCountry: PropTypes.string,\n    children: PropTypes.string.isRequired,\n  };\n\n  handleClick = () => {\n    const { yearRange, countries, selectedYear, selectedCountry } = this.props;\n    let queryParams = {};\n    let fields = {};\n\n    if (!!yearRange) {\n      const years = [...Array(yearRange[1] - yearRange[0] + 1).keys()].map(\n        v => yearRange[0] + v\n      );\n      queryParams.years = years;\n      fields.availableYears = years;\n    }\n    if (!!countries) {\n      queryParams.countries = countries;\n      fields.availableCountries = countries;\n    }\n\n    if (!!selectedYear) fields.selectedYear = selectedYear;\n    if (!!selectedCountry) fields.selectedCountry = selectedCountry;\n\n    if (Object.keys(queryParams).length !== 0)\n      this.props.data.setQuery(queryParams);\n    if (Object.keys(fields).length !== 0)\n      this.props.interaction.setFields(fields);\n  };\n\n  render() {\n    return <Button onClick={this.handleClick}>{this.props.children}</Button>;\n  }\n}\n\nexport default withInteraction(withData(PresetButton));\n","import React, { Component } from 'react';\nimport { Layout, Card, Icon } from 'antd';\nimport {\n  CountryPicker,\n  YearRangeSlider,\n  LineChart,\n  Waterfall,\n  ScatterPlot,\n} from '../../Visualizations';\nimport PresetButton from '../PresetButton/PresetButton';\n\nimport './VisualizationContainer.css';\n\nconst { Sider, Content } = Layout;\n\nclass VisualizationContainer extends Component {\n  state = {\n    waterfalls: [],\n    waterfallCount: 0,\n  };\n\n  handleCloseWaterfall = key => () => {\n    this.setState(state => ({\n      waterfalls: state.waterfalls.filter(w => +w.key !== key),\n    }));\n  };\n\n  render() {\n    return (\n      <Layout style={{ height: '100vh' }}>\n        <Sider theme=\"light\" className=\"sidebar\">\n          <div className=\"sidebarContent\">\n            <h1 className=\"App-title\">Nutrition InfoViz</h1>\n            <CountryPicker />\n            <YearRangeSlider />\n            <PresetButton\n              countries={['Canada', 'Afghanistan', 'Mexico']}\n              yearRange={[1990, 2000]}\n            >\n              Preset 1\n            </PresetButton>\n          </div>\n          <a\n            target=\"_blank\"\n            href=\"https://github.com/bndnio/world-diet-viz\"\n            rel=\"noopener noreferrer\"\n          >\n            <Icon type=\"github\" theme=\"outlined\" />\n          </a>\n        </Sider>\n        <Content className=\"dashboard\">\n          <ScatterPlot />\n          <LineChart />\n          {this.state.waterfalls}\n          <Card\n            size=\"small\"\n            hoverable\n            bodyStyle={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              justifyContent: 'space-around',\n              width: '200px',\n              height: '120px',\n            }}\n            onClick={() =>\n              this.setState(state => ({\n                waterfalls: [\n                  ...state.waterfalls,\n                  <Waterfall\n                    key={state.waterfallCount}\n                    handleClose={this.handleCloseWaterfall(\n                      state.waterfallCount\n                    )}\n                  />,\n                ],\n                waterfallCount: state.waterfallCount + 1,\n              }))\n            }\n          >\n            Waterfall\n            <br />\n            <Icon type=\"plus\" theme=\"outlined\" style={{ fontSize: 30 }} />\n          </Card>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\n// Receives no props\nVisualizationContainer.propTypes = {};\n\nexport default VisualizationContainer;\n","import * as React from 'react';\nimport { DataContext } from './data-context';\nimport ApolloClient from 'apollo-boost';\nimport gql from 'graphql-tag';\nimport { ApolloProvider } from 'react-apollo';\n\nexport default class DataProvider extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      setDate: this.setData,\n      setQuery: this.setQuery,\n      data: [],\n      queryParams: {\n        type: 'MACRO',\n        countries: [],\n        years: [],\n      },\n      loading: 0,\n    };\n    this.client = new ApolloClient({\n      // uri: 'http://localhost:4000/graphql',\n      uri: 'https://gql.healthviz.xyz/graphql',\n    });\n  }\n\n  setQuery = async nextQuery => {\n    await this.setState(state => ({\n      queryParams: {\n        ...state.queryParams,\n        ...nextQuery,\n      },\n    }));\n    this.getData();\n  };\n\n  setData = nextData => {\n    // save data to state\n    this.setState(state => ({ data: nextData, loading: state.loading - 1 }));\n  };\n\n  getData = () => {\n    const { years, countries, type } = this.state.queryParams;\n    this.setState(state => ({ loading: state.loading + 1 }));\n\n    if (years.length === 0 || countries.length === 0) {\n      return this.setData([]);\n    }\n\n    this.client\n      .query({\n        query: gql`\n          {\n            alls(\n              ${years.length > 0 ? `years:${JSON.stringify(years)}, ` : ''}\n              ${\n                countries.length > 0\n                  ? `countries:${JSON.stringify(countries)}, `\n                  : ''\n              }\n              ${!!type ? `type:${type}` : ''}\n            )\n              {\n              year\n              countries {\n                country\n                items {\n                  country\n                  year\n                  type\n                  name\n                  value\n                  lifeExp\n                }\n              }\n            }\n          }\n        `,\n      })\n      .then(result => this.setData(result.data.alls || []))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <DataContext.Provider value={this.state}>\n        <ApolloProvider client={this.client}>\n          {this.props.children}\n        </ApolloProvider>\n      </DataContext.Provider>\n    );\n  }\n}\n","import * as React from 'react';\nimport { InteractionContext } from './interaction-context';\n\nexport default class InteractionProvider extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      setFields: this.setFields,\n      fields: {\n        availableYears: [],\n        availableCountries: [],\n        selectedYear: null,\n        selectedCountry: null,\n        hoveredYear: null,\n        hoveredCountry: null,\n      },\n    };\n  }\n\n  setFields = nextFieldsDiff => {\n    // save Interaction to state\n    this.setState(state => ({\n      fields: { ...state.fields, ...nextFieldsDiff },\n    }));\n  };\n\n  render() {\n    return (\n      <InteractionContext.Provider value={this.state}>\n        {this.props.children}\n      </InteractionContext.Provider>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport VisualizationContainer from '../Components/VisualizationContainer';\nimport DataProvider from '../Contexts/DataContext/DataProvider';\nimport InteractionProvider from '../Contexts/InteractionContext/InteractionProvider';\n\nclass App extends Component {\n  render() {\n    return (\n      <DataProvider>\n        <InteractionProvider>\n          <div className=\"App\">\n            <VisualizationContainer />\n          </div>\n        </InteractionProvider>\n      </DataProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}